(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6305],{68430:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/dashboard/scheduledjob",function(){return t(25467)}])},9489:function(n,e,t){"use strict";t.d(e,{I:function(){return m}});var i=t(26042),r=t(69396),a=t(99534),o=t(85893),s=t(5616),u=t(51233),d=t(50135),c=t(90948),l=t(15861),m=function(n){var e=n.leftLabel,t=n.rightLabel,s=n.error,d=(0,a.Z)(n,["leftLabel","rightLabel","error"]);return(0,o.jsxs)(u.Z,{direction:"row",alignItems:"center",children:[(0,o.jsx)(p,{sx:{borderTopLeftRadius:"5px",borderBottomLeftRadius:"5px"},error:s,children:(0,o.jsx)(l.Z,{sx:{display:"flex",justifyContent:"center",alignItems:"center",whiteSpace:"nowrap"},children:e})}),(0,o.jsx)(_,(0,r.Z)((0,i.Z)({},d),{variant:"outlined",size:"small",error:s})),(0,o.jsx)(p,{sx:{borderTopRightRadius:"5px",borderBottomRightRadius:"5px"},error:s,children:(0,o.jsx)(l.Z,{sx:{display:"flex",justifyContent:"center",alignItems:"center",whiteSpace:"nowrap"},variant:"body2",fontWeight:700,children:t})})]})},p=(0,c.ZP)(s.Z)(function(n){var e=n.theme;return{display:"flex",justifyContent:"center",alignItems:"center",backgroundColor:n.error?e.palette.danger.main:"#D9D9D9",minwidth:"28px",height:"28px",padding:"0 5px"}}),_=(0,c.ZP)(d.Z)(function(n){var e=n.theme,t=n.error;return{height:"28px","& .MuiInputBase-root ":{borderRadius:"0px","&.Mui-focused":{"& .MuiOutlinedInput-notchedOutline":{borderColor:t?e.palette.danger.main:"#D9D9D9"}},"& .MuiInputBase-input":{padding:"2px 14px",borderColor:t?e.palette.danger.main:"#D9D9D9",borderStyle:"solid",borderBottomWidth:"2.5px",borderTopWidth:"2px"},"& .MuiOutlinedInput-notchedOutline":{border:"none"}}}})},45815:function(n,e,t){"use strict";t.d(e,{z:function(){return o}});var i=t(7297),r=t(75063);function a(){var n=(0,i.Z)(["\n  fragment AccountFields on Account {\n    id\n    type\n    name\n    status\n    vatId\n  }\n"]);return a=function(){return n},n}var o=(0,r.Ps)(a())},46602:function(n,e,t){"use strict";t.d(e,{k:function(){return b}});var i=t(26042),r=t(69396),a=t(85893),o=t(45697),s=t(42283),u=t(79665),d=t(76600),c=t(9270),l=t(62140),m=t(49501),p=t(55563),_=t(6710),$=t(95103),f=t(74231),g=(0,f.Ry)().shape({name:(0,f.Z_)(),invoicingEntity:(0,f.Z_)(),addressLine1:(0,f.Z_)().required(),addressLine2:(0,f.Z_)(),addressLine3:(0,f.Z_)(),city:(0,f.Z_)().required(),postCode:(0,f.Z_)().matches("^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9][A-Za-z]?))))\\s?[0-9][A-Za-z]{2})$|^([AC-FHKNPRTV-Y]\\d{2}|D6W)\\s[0-9AC-FHKNPRTV-Y]{4}$").required(),county:(0,f.Z_)(),countryId:(0,f.Z_)().required()}),I=t(25742),y=t(73760),b=function(n){var e=n.defaultValues,t=(n.onCancel,n.onSubmit),o=n.type,f=(0,s.cI)({defaultValues:(0,i.Z)({},e),resolver:(0,u.S)(g)}),b=f.control,h=f.errors,v=f.handleSubmit,q={control:b,errors:h,register:f.register};return(0,a.jsxs)(d.Z,{id:"offCanvasForm",handleSubmit:v(t),children:[(0,a.jsxs)(c.Z,{children:[(0,a.jsx)(l.Z,{md:12,children:(0,a.jsx)(m.Z,{label:"Address name",children:(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"name"}))})}),"invoice"===o&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(l.Z,{md:12,children:(0,a.jsx)(m.Z,{label:"invoicing email",children:(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"invoicingEmail",type:"email"}))})}),(0,a.jsx)(l.Z,{md:12,children:(0,a.jsx)(m.Z,{label:"Invoicing entity",children:(0,a.jsx)(_.Z,(0,r.Z)((0,i.Z)({},q),{name:"invoicingEntity",rows:4}))})})]}),(0,a.jsx)(l.Z,{md:6,children:(0,a.jsx)(m.Z,{label:"Address Line 1",children:(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"addressLine1"}))})}),(0,a.jsx)(l.Z,{md:6,children:(0,a.jsx)(m.Z,{label:"Address Line 2",children:(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"addressLine2"}))})}),(0,a.jsx)(l.Z,{md:6,children:(0,a.jsx)(m.Z,{label:"Address Line 3",children:(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"addressLine3"}))})}),(0,a.jsx)(l.Z,{md:6,children:(0,a.jsx)(m.Z,{label:"City",children:(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"city"}))})}),(0,a.jsx)(l.Z,{md:6,children:(0,a.jsx)(m.Z,{label:"Post Code",children:(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"postCode"}))})}),(0,a.jsx)(l.Z,{md:6,children:(0,a.jsx)(m.Z,{label:"County",children:(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"county"}))})}),(0,a.jsx)(l.Z,{md:6,children:(0,a.jsx)(m.Z,{label:"Country",children:(0,a.jsx)($.Z,(0,r.Z)((0,i.Z)({},q),{name:"countryId",options:y.O}))})})]}),(0,a.jsx)(c.Z,{justify:"end",children:(0,a.jsx)(l.Z,{md:12,children:(0,a.jsx)(I.H,{content:"Submit",type:"submit"})})}),(null==e?void 0:e.id)&&(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"id",type:"hidden"})),(null==e?void 0:e.meta)&&(0,a.jsx)(p.Z,(0,r.Z)((0,i.Z)({},q),{name:"meta",type:"hidden"}))]})};b.propTypes={defaultValues:o.object,onCancel:o.func.isRequired,onSubmit:o.func.isRequired,type:o.string}},36641:function(n,e,t){"use strict";t.d(e,{H:function(){return L}});var i=t(47568),r=t(14924),a=t(828),o=t(29815),s=t(97582),u=t(85893),d=t(67294),c=t(45697),l=t(6388),m=t(50319),p=t(66312),_=t(33006),$=t(15214),f=t(26042),g=t(68956),I=t(49501),y=t(62047),b=t(51466),h=t(2931),v=t(55843),q=t(8500),S=t(25742),x=t(46602),A=t(13777),Z=t(64872),j=function(n){var e,t=n.addresses,r=n.entity,o=n.entityId,c=(n.id,n.loading),l=n.onSelected,_=n.refetch,$=n.selectable,j=n.selected,k=n.type,U=n.editable,L=(0,Z.a)(),T=(0,d.useState)(1),D=T[0],C=T[1],w=(0,a.Z)((0,m.D)(p.BO,{onCompleted:function(){L.close(),_()}}),1)[0],P=(0,a.Z)((0,m.D)(p._r,{onCompleted:function(){L.close(),_()}}),1)[0],R=function(n,e){l(n,e)},N=(e=(0,i.Z)(function(n){var e,t,i,a,u;return(0,s.__generator)(this,function(s){switch(s.label){case 0:return(e=n).countryId||(e.countryId=1),t={address:e},[4,window.fetch("".concat("https://aws-staging.cleverly.works","/google/maps/geocode"),{method:"POST",headers:{"Content-Type":"application/json; charset=utf-8"},body:JSON.stringify(t)}).then(function(n){return n.json()}).catch(function(n){(0,A.Tb)({message:n,section:"fetch"})})];case 1:if(i=s.sent(),n.id?e.meta=(0,f.Z)({invoicingEmail:n.invoicingEmail},n.meta):e.meta={invoicingEmail:n.invoicingEmail},delete e.invoicingEmail,(null==(a=(null==i?void 0:i.coordinates)||null)?void 0:a.lat)&&(null==a?void 0:a.lng)&&(e.geo={type:"Point",coordinates:[a.lng,a.lat]}),!n.id)return[3,3];return u=parseInt(n.id),[4,P({variables:{id:u,changes:e}})];case 2:return s.sent(),[3,5];case 3:return e.Address_Entities={data:{entity:r,entityId:o,status:"active"}},[4,w({variables:{objects:[e]}})];case 4:s.sent(),s.label=5;case 5:return[2]}})}),function(n){return e.apply(this,arguments)}),J=function(n){L.close()},F=function(n){var e,i={},r=t.find(function(e){return e.id===n.id}),a=r?r.address:null;a&&(i.id=a.id,i.invoicingEmail=null===(e=a.meta)||void 0===e?void 0:e.invoicingEmail,i.invoicingEntity=a.invoicingEntity,i.name=a.name,i.addressLine1=a.addressLine1,i.addressLine2=a.addressLine2,i.addressLine3=a.addressLine3,i.city=a.city,i.postCode=a.postCode,i.county=a.county,i.countryId=a.countryId),L.show({content:(0,u.jsx)(x.k,{defaultValues:i,onCancel:J,onSubmit:N,type:k}),title:a?"Edit address":"invoice"===k?"Add new invoice address":"Add new address",submit:!1})},M=[{hidden:!0},{hidden:!$||!U,text:"Select"},{text:"Address"},{hidden:"invoice"!==k,text:"Email"},{formatter:g.Z,formatterData:[{context:"secondary",icon:["fas","edit"],onClick:function(n,e){return F(e)},tooltip:"Edit"}],text:"Actions",hidden:!U}],E=(null==t?void 0:t.map(function(n,e){var t,i=n.address;return{id:n.id,select:function(){return(0,u.jsx)(I.Z,{children:(0,u.jsx)(y.Z,{context:"secondary",onToggle:function(n){return R(i.id,n)},size:"sm",toggled:Number(j)===i.id})})},address:function(){var n;return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(b.Z,{content:null==i?void 0:i.name,size:"md"}),(0,u.jsx)(h.Z,{country:(null===(n=i.country)||void 0===n?void 0:n.name)||"",line1:i.addressLine1,town:i.city})]})},email:(null===(t=i.meta)||void 0===t?void 0:t.invoicingEmail)||"-",actions:""}}))||[];return(0,u.jsxs)(u.Fragment,{children:[U&&(0,u.jsx)(S.H,{content:"Add new address",handleClick:F}),(0,u.jsx)(v.Z,{marginBottom:"xs"}),(0,u.jsx)(q.Z,{columns:M,loading:c,pagination:!0,paginationProps:{currentPage:D,onPageChange:function(n){C(n)},onPageSizeChange:function(){},pageCount:Math.ceil((null==E?void 0:E.length)/50),perPage:50},rows:null==E?void 0:E.slice((D-1)*50,50*D)})]})};j.propTypes={addresses:c.array.isRequired,entity:c.string.isRequired,entityId:c.number.isRequired,id:c.number,loading:c.bool.isRequired,onSelected:c.func.isRequired,refetch:c.func.isRequired,selectable:c.bool.isRequired,selected:c.number,type:c.string},j.defaultProps={addresses:[],selectable:!1,selected:""};var k=t(85113),U=t(2845),L=function(n){var e,t,c,f,g=n.addressId,I=n.entity,y=n.entityId,b=n.id,h=n.onSubmit,v=n.type,q=(0,d.useState)(g||null),S=q[0],x=q[1],A=(0,d.useState)(!1),Z=A[0],L=A[1],T=(0,d.useState)(null),D=T[0],C=T[1],w=(0,k.DM)(v),P=(0,k.VJ)(I),R=(0,(0,U.x)().hasRole)("customer"),N=(0,l.aM)(P,{variables:{id:y}}),J=N.loading,F=N.data,M=(void 0===F?{item:null}:F).item,E=N.refetch,z=(0,a.Z)((0,m.D)(p.x0,{onCompleted:function(n){h&&h(n)}}),1)[0],O=(0,a.Z)((0,m.D)(p.y8,{onCompleted:function(n){h&&h(n)}}),1)[0],H=[];M&&(M.addresses&&H.push.apply(H,(0,o.Z)(M.addresses)),M.accounts&&(null===(e=M.accounts[0])||void 0===e?void 0:null===(t=e.account)||void 0===t?void 0:t.addresses)&&M.accounts[0].account.addresses.forEach(function(n){H.find(function(e){return e.address.id===n.address.id})||H.push(n)}));var B,W=(f=(0,i.Z)(function(n,e){return(0,s.__generator)(this,function(t){switch(t.label){case 0:if(C(!1),L(!1),!e)return[3,2];return x(parseInt(n)),[4,G(parseInt(n))];case 1:return t.sent(),[3,3];case 2:L(!0),t.label=3;case 3:return[2]}})}),function(n,e){return f.apply(this,arguments)}),G=(B=(0,i.Z)(function(n){var e,t,i,a,o;return(0,s.__generator)(this,function(a){switch(a.label){case 0:if(!(S!==n))return[3,5];if(e=null,t=null,H.forEach(function(i){i.address.id===n&&(e=i.entity,t=i.id)}),!(t&&e===I))return[3,2];return i={id:parseInt(t),changes:(0,r.Z)({},v,!0),whereOld:(0,r.Z)({entityId:{_eq:y}},v,{_eq:!0}),changesOld:(0,r.Z)({},v,!1)},[4,O({variables:i})];case 1:return a.sent(),C(!0),[3,4];case 2:return o={objects:[(0,r.Z)({addressId:parseInt(n),entity:I,entityId:y,status:"active"},v,!0)],whereOld:(0,r.Z)({entityId:{_eq:y}},v,{_eq:!0}),changesOld:(0,r.Z)({},v,!1)},[4,z({variables:o})];case 3:a.sent(),C(!0),a.label=4;case 4:return[3,6];case 5:h&&h(null),a.label=6;case 6:return[2]}})}),function(n){return B.apply(this,arguments)});return(0,u.jsxs)(u.Fragment,{children:[(0,u.jsx)(_.Z,{tag:"h4",content:w}),D&&(0,u.jsx)($.Z,{content:"Selection saved.",context:"primary"}),Z&&(0,u.jsx)($.Z,{content:"You should select at least one address.",context:"info"}),(0,u.jsx)(j,{addresses:H,entity:I,entityId:y,id:b,loading:J,refetch:E,selectable:!0,selected:S,type:v,onSelected:W,editable:!R})]})};L.propTypes={addressId:c.number,entity:c.string.isRequired,entityId:c.number.isRequired,id:c.number,onSubmit:c.func.isRequired,type:c.string.isRequired}},35381:function(n,e,t){"use strict";t.d(e,{il:function(){return a},j$:function(){return i},wo:function(){return r}});var i=function(n,e){if(Array.isArray(e)){var t,i,r=null;return e.forEach(function(e){var t,i,a=null===(t=n.timings)||void 0===t?void 0:t.find(function(n){return n.status===e});r=(null==a?void 0:null===(i=a.user)||void 0===i?void 0:i.fullName)||r}),r}var a=null===(t=n.timings)||void 0===t?void 0:t.find(function(n){return n.status===e});return(null==a?void 0:null===(i=a.user)||void 0===i?void 0:i.fullName)||null},r=function(n,e){if(Array.isArray(e)){var t,i=null;return e.forEach(function(e){var t,r=null===(t=n.timings)||void 0===t?void 0:t.find(function(n){return n.status===e});i=(null==r?void 0:r.id)||i}),i}var r=null===(t=n.timings)||void 0===t?void 0:t.find(function(n){return n.status===e});return(null==r?void 0:r.id)||null},a=function(n,e){return!n||n>e}},50459:function(n,e,t){"use strict";t.d(e,{lR:function(){return p},Uu:function(){return m}});var i=t(828);t(52785),t(71431);var r=t(7297),a=t(75063),o=t(85488),s=t(45815),u=t(66312),d=t(75327);function c(){var n=(0,r.Z)(['\n  query GetDashboardList(\n    $accountId: Int\n    $adminId: Int\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ',"\n  ","\n  ","\n  ","\n  ","\n"]);return c=function(){return n},n}(0,a.Ps)(c(),s.z,u.WW,o.aL,o.wd,d.Px);var l=t(22244),m=function(n){var e=["locationId","customerId","assetId"],t="";return n&&n.constructor===Object&&Object.keys(n).length>0&&(t="?",Object.entries(n).map(function(n){var r=(0,i.Z)(n,2),a=r[0],o=r[1];return o&&e.includes(a)&&(t+="".concat([a],"=").concat(o,"&")),0}),t=(t=t.substring(0,t.length-1)).replace("customerId","accountId")),t},p=function(n){var e=["completed","inDispute","disputeResolved","reportSent","invoiceSent","customerPaid","supplierPaid","closed"];switch(n){case"offered":return l.cj.filter(function(n){return"offered"===n.value});case"current":return l.cj.filter(function(n){var e=n.value;return"accepted"===e||"inProgress"===e});case"openJobs":return l.cj.filter(function(n){var e=n.value;return"raised"===e||"pending"===e});case"raised":return l.cj.filter(function(n){return"raised"===n.value});case"pending":return l.cj.filter(function(n){return"pending"===n.value});case"past":return l.cj.filter(function(n){var t=n.value;return e.includes(t)});default:return l.cj}}},52785:function(n,e,t){"use strict";t.d(e,{ct:function(){return c},lS:function(){return d},p7:function(){return u}});var i=t(7297),r=t(75063);function a(){var n=(0,i.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $type: String\n    $userId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n      }\n      location: Location {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierUser: SupplierUser {\n        id\n        fullName\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']);return a=function(){return n},n}function o(){var n=(0,i.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: Job_order_by!\n    $startDate: timestamptz\n    $status: [String!]\n    $type: [String!]\n    $userId: Int\n    $locationId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n        customerUserId: { _eq: $userId }\n        locationId: { _eq: $locationId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n        customerUserId: { _eq: $userId }\n        locationId: { _eq: $locationId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']);return o=function(){return n},n}function s(){var n=(0,i.Z)(["\n  query GetJobs(\n    $assetId: Int\n    $customerId: Int\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $locationId: Int\n    $sublocationId: Int\n    $managerId: Int\n    $customerManagerId: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $paid: Boolean\n    $type: [String!]\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $tags: [Int!]\n    $supplierId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ",'\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        sublocationId: { _eq: $sublocationId }\n        managerId: { _eq: $managerId }\n        Customer: { managerId: { _eq: $customerManagerId } }\n        paid: { _eq: $paid }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      tags: Taxonomy(\n        where: {\n          entity: { _eq: "Job" }\n          Taxonomy: {\n            _and: [\n              {status: { _eq: "active" }},\n              {type: { _eq: "tags" }}\n            ]\n\n          }\n        }\n      ) {\n        id\n        tag: Taxonomy {\n          id\n          name\n          meta\n          type\n        }\n      }\n\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ',"\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        sublocationId: { _eq: $sublocationId }\n        managerId: { _eq: $managerId }\n        Customer: { managerId: { _eq: $customerManagerId } }\n        paid: { _eq: $paid }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"]);return s=function(){return n},n}var u=(0,r.Ps)(a()),d=(0,r.Ps)(o()),c=function(n){var e=n.tagsWhere;return(0,r.Ps)(s(),e,e)}},71431:function(n,e,t){"use strict";var i=t(7297),r=t(75063),a=t(85488),o=t(45815),s=t(66312),u=t(75327);function d(){var n=(0,i.Z)(["\n  query GetDashboardList(\n    $accountId: Int\n    $customerId: Int\n    $supplierId: Int\n    $locationId: Int\n    $managerId: Int\n    $customerManagerId: Int\n    $adminId: Int\n    $startDate: timestamptz\n    $endDate: timestamptz\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n    $number: String\n    $status: [String!]\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n        locationId: $locationId\n        managerId: $managerId\n        customerManagerId: $customerManagerId\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ",'\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        manager: Manager {\n          id\n          fullName\n        }\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      job: Job {\n        status\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      tags: Taxonomy(\n        where: {\n          entity: { _eq: "Job" }\n          Taxonomy: {\n            status: { _eq: "active" }\n            type: { _eq: "tags" }\n          }\n        }\n      ) {\n        id\n        tag: Taxonomy {\n          id\n          name\n          meta\n          type\n        }\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n        locationId: $locationId\n        managerId: $managerId\n        customerManagerId: $customerManagerId\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ',"\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        supplierId: { _eq: $supplierId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ","\n  ","\n  ","\n  ","\n  ","\n"]);return d=function(){return n},n}var c=function(n){var e=n.tagsWhere;return(0,r.Ps)(d(),e,e,o.z,s.WW,a.aL,a.wd,u.Px)};e.Z=c},85488:function(n,e,t){"use strict";t.d(e,{H_:function(){return g},Vw:function(){return h},aL:function(){return _},pf:function(){return $},sW:function(){return b},wd:function(){return f},xY:function(){return I},yT:function(){return y}});var i=t(7297),r=t(75063),a=t(66312);function o(){var n=(0,i.Z)(["\n  fragment JobFields on Job {\n    access\n    issueReportedDescription\n    adminId\n    costCategory\n    createdAt\n    description\n    id\n    meta\n    pricing\n    reference\n    scheduledAt\n    status\n    supplierLabourAmount\n    supplierMaterialsAmount\n    timing\n    timingEnd\n    timingNormalHours\n    timingStart\n    title\n    type\n    siteVisitStart\n    siteVisitEnd\n    siteVisitWeekends\n    amount\n    number\n    quoted\n    timingStatus\n    correctDuration\n    correctStart\n    correctEnd\n  }\n"]);return o=function(){return n},n}function s(){var n=(0,i.Z)(["\n  fragment JobQuoteFields on Job {\n    quoted\n    quoteNumber\n    quoteDue\n    quoteDueSupplier\n    quoteCharge\n  }\n"]);return s=function(){return n},n}function u(){var n=(0,i.Z)(["\n  fragment JobAdminFields on Job {\n    supplierId\n    supplierUserId\n  }\n"]);return u=function(){return n},n}function d(){var n=(0,i.Z)(["\n  fragment JobSupplierFields on Job {\n    supplierId\n    supplierUserId\n  }\n"]);return d=function(){return n},n}function c(){var n=(0,i.Z)(["\n  mutation UpdateJob(\n    $id: Int!\n    $changes: Job_set_input\n    $timing: [JobTiming_insert_input!]!\n    $_append: Job_append_input = {}\n  ) {\n    update_Job_by_pk(pk_columns: { id: $id }, _set: $changes, _append: $_append) {\n      id\n    }\n    insert_JobTiming(objects: $timing) {\n      returning {\n        id\n        status\n        createdAt\n      }\n    }\n  }\n"]);return c=function(){return n},n}function l(){var n=(0,i.Z)(["\n  mutation InsertJobTiming($timing: [JobTiming_insert_input!]!) {\n    insert_JobTiming(objects: $timing) {\n      returning {\n        id\n        status\n        createdAt\n      }\n    }\n  }\n"]);return l=function(){return n},n}function m(){var n=(0,i.Z)(['\n  query GetJobHistory(\n    $jobId: Int\n    $locationId: Int!\n    $limit: Int\n    $offset: Int\n    $serviceId: Int\n    $startDate: timestamptz!\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      order_by: { createdAt: desc }\n      where: {\n        createdAt: { _gte: $startDate }\n        id: { _neq: $jobId }\n        locationId: { _eq: $locationId }\n        serviceId: { _eq: $serviceId }\n        status: { _nin: ["pending", "raised", "offered", "accepted", "inProgress"] }\n      }\n    ) {\n      id\n      title\n      status\n      scheduledAt\n      createdAt\n      meta\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        createdAt: { _gte: $startDate }\n        id: { _neq: $jobId }\n        locationId: { _eq: $locationId }\n        serviceId: { _eq: $serviceId }\n        status: { _nin: ["pending", "raised", "offered", "accepted", "inProgress"] }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']);return m=function(){return n},n}function p(){var n=(0,i.Z)(['\n  query GetJob($jobId: Int!) {\n    job: Job_by_pk(id: $jobId) {\n      access\n      costCategory\n      customerSpendThreshold\n      description\n      supplierLabourAmount\n      supplierMaterialsAmount\n      quoteDue\n      quoteNumber\n      id\n      number\n      meta\n      paymentMethod\n      reference\n      status\n      title\n      type\n      quoted\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        id\n        invoiceNumber\n      }\n      quotations: SupplierQuotes {\n        id\n        quoteNumber\n        status\n        lineItems: SupplierQuoteLineItems {\n          id\n          description\n          item\n          qty\n          qtyUnit\n          quoteId\n          total\n          type\n          unitRate\n          supplierTotal\n        }\n        supplier: Supplier {\n          id\n          type\n          name\n          accountUsers: Account_Users {\n            user: User {\n              id\n              fullName\n              nameFirst\n              nameLast\n              phone\n              email\n              devices: UserDevices(where: { status: { _eq: "active" } }) {\n                id\n                playerId\n              }\n            }\n          }\n        }\n      }\n      admin: Admin {\n        id\n        name\n      }\n      service: Service {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      customer: Customer {\n        id\n        name\n        website\n        slas: SLAs(where: { entity: { _eq: "Account" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n      }\n      customerUser: CustomerUser {\n        id\n        nameFirst\n        nameLast\n        fullName\n        email\n        phone\n      }\n      supplier: Supplier {\n        id\n        name\n        contactUsers: Account_Users(where: { isContact: { _eq: true } }) {\n          id\n          role\n          position\n          isContact\n          lastSignInAt\n          userId\n          user: User {\n            id\n            fullName\n            nameFirst\n            nameLast\n            email\n            phone\n          }\n        }\n      }\n      supplierUser: SupplierUser {\n        id\n        fullName\n        nameFirst\n        nameLast\n        email\n        phone\n      }\n      location: Location {\n        id\n        name\n        addresses: Addresses(where: { entity: { _eq: "Location" } }) {\n          ...AddressEntityFields\n          address: Address {\n            ...AddressFields\n            country: Country {\n              id\n              name\n            }\n          }\n        }\n        slas: SLAs(where: { entity: { _eq: "Location" } }) {\n          id\n          entity\n          entityId\n          onSite\n          onSiteUnit\n          jobReport\n          jobReportUnit\n          completion\n          completionUnit\n          notes\n          inUse\n          normalRate\n          oohRate\n          premiumRate\n          minimumInterval\n          minimumLength\n          slaId\n          sla: SLA {\n            id\n            name\n            notes\n            normalRate\n            oohRate\n            premiumRate\n            onSite\n            onSiteUnit\n            jobReport\n            jobReportUnit\n            completion\n            completionUnit\n            minimumInterval\n            minimumLength\n          }\n        }\n      }\n      sla: SLA {\n        id\n        name\n        notes\n        normalRate\n        oohRate\n        premiumRate\n        onSite\n        onSiteUnit\n        jobReport\n        jobReportUnit\n        completion\n        completionUnit\n        minimumInterval\n        minimumLength\n      }\n      costCategoryTaxonomy: CostCategory {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n    }\n  }\n  ',"\n  ","\n"]);return p=function(){return n},n}var _=(0,r.Ps)(o()),$=(0,r.Ps)(s()),f=(0,r.Ps)(u()),g=(0,r.Ps)(d()),I=(0,r.Ps)(c()),y=(0,r.Ps)(l()),b=(0,r.Ps)(m()),h=(0,r.Ps)(p(),a.WW,a.MR)},93884:function(n,e,t){"use strict";t.d(e,{C:function(){return p}});var i=t(26042),r=t(69396),a=t(85893);t(67294);var o=t(45697),s=t(90948),u=t(15861),d=t(51233),c=t(11057),l=t(61730),m=(0,s.ZP)("img")({width:"300px",height:"250px"}),p=function(n){var e=n.imageSrc,t=n.sx,o=n.imageSx,s=n.title,p=n.titleSx,_=n.subtitleFirstLine,$=n.subtitleFirstLineSx,f=n.subtitleSecondLine,g=n.subtitleSecondLineSx,I=n.buttonText,y=n.onAction,b=(0,l.Z)("(max-width: 400px)");return(0,a.jsxs)(d.Z,{sx:(0,r.Z)((0,i.Z)({},t),{width:"100%",height:"100%"}),justifyContent:"center",alignItems:"center",spacing:2,color:"#757575",children:[(0,a.jsx)(m,{src:e,sx:(0,r.Z)((0,i.Z)({},o),{width:b?"250px":"300px"})}),(0,a.jsx)(u.Z,{typography:"h5",sx:(0,i.Z)({},p),children:s}),(0,a.jsxs)(d.Z,{alignItems:"center",sx:{padding:"0px 10px",textAlign:"center"},children:[(0,a.jsx)(u.Z,{sx:(0,i.Z)({},$),children:_}),(0,a.jsx)(u.Z,{sx:(0,i.Z)({},g),children:f})]}),I&&y&&(0,a.jsx)(c.Z,{variant:"contained",color:"secondary",onClick:y,children:I})]})};p.propTypes={imageSrc:o.string,title:o.string,subtitleFirstLine:o.string,subtitleSecondLine:o.string,onAction:o.func,sx:o.object,imageSx:o.object,titleSx:o.object,subtitleFirstLineSx:o.object,subtitleSecondLineSx:o.object},p.defaultProps={title:"",subtitleFirstLine:"",subtitleSecondLine:"",sx:{},imageSx:{},titleSx:{},subtitleFirstLineSx:{},subtitleSecondLineSx:{},onAction:null}},75327:function(n,e,t){"use strict";t.d(e,{$E:function(){return P},AX:function(){return S},I4:function(){return q},JA:function(){return A},MT:function(){return L},Px:function(){return j},WF:function(){return Z},ZA:function(){return J},a8:function(){return k},fA:function(){return w},fo:function(){return x},ge:function(){return N},iM:function(){return C},nE:function(){return T},nh:function(){return D},r1:function(){return U},tW:function(){return F},uz:function(){return R}});var i=t(7297),r=t(75063);function a(){var n=(0,i.Z)(["\n  mutation InsertAccountUser($objects: [Account_User_insert_input!]!) {\n    insert_Account_User(objects: $objects) {\n      returning {\n        id\n      }\n    }\n  }\n"]);return a=function(){return n},n}function o(){var n=(0,i.Z)(["\n  mutation UpdateUser(\n    $id: Int!\n    $accountUserId: Int!\n    $accountUserChanges: Account_User_set_input\n    $changes: User_set_input\n    $updateAccountUser: Boolean!\n  ) {\n    update_Account_User_by_pk(pk_columns: { id: $accountUserId }, _set: $accountUserChanges)\n      @include(if: $updateAccountUser) {\n      id\n    }\n    update_User_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n    }\n  }\n"]);return o=function(){return n},n}function s(){var n=(0,i.Z)(["\n  query GetUsers(\n    $accountId: Int\n    $accountType: String\n    $date: timestamptz\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: User_order_by!\n    $status: String\n  ) {\n    users: User(\n      limit: $limit\n      offset: $offset\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [\n          { email: { _ilike: $q } }\n          { nameFirst: { _ilike: $q } }\n          { nameLast: { _ilike: $q } }\n        ]\n        status: { _eq: $status }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      invoiceThreshold\n      quoteThreshold\n      media: Media {\n        id\n        medium: Medium {\n          id\n          category\n          filename\n          meta\n          type\n        }\n      }\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n        userLocations: User_Account_Locations {\n          accountLocationId\n        }\n      }\n    }\n    meta: User_aggregate(\n      where: {\n        Account_Users: { Account: { id: { _eq: $accountId }, type: { _eq: $accountType } } }\n        createdAt: { _eq: $date }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        status: { _eq: $status }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"]);return s=function(){return n},n}function u(){var n=(0,i.Z)(["\n  query GetUser($id: Int!) {\n    user: User_by_pk(id: $id) {\n      id\n      fullName\n      name: nameFirst\n      nameFirst\n      nameLast\n      phone\n      status\n      email\n      createdAt\n      meta\n      invoiceThreshold\n      quoteThreshold\n      media: Media {\n        id\n        medium: Medium {\n          id\n          category\n          filename\n          meta\n          type\n        }\n      }\n      accounts: Account_Users {\n        id\n        role\n        position\n        isContact\n        status\n        account: Account {\n          id\n          name\n          type\n        }\n      }\n    }\n  }\n"]);return u=function(){return n},n}function d(){var n=(0,i.Z)(["\n  query CheckDuplicateEmail($email: String!) {\n    users: User_public(where: { email: { _eq: $email } }) {\n      id\n      nameFirst\n      nameLast\n      email\n      phone\n    }\n  }\n"]);return d=function(){return n},n}function c(){var n=(0,i.Z)(["\n  fragment UserFields on User {\n    id\n    email\n    nameFirst\n    nameLast\n    fullName\n    phone\n    status\n  }\n"]);return c=function(){return n},n}function l(){var n=(0,i.Z)(["\n  mutation SendGoogleAuthCode($code: String!, $id: Int!, $type: String!) {\n    createGoogleToken(code: $code, id: $id, type: $type) {\n      success\n      tokens\n      error\n    }\n  }\n"]);return l=function(){return n},n}function m(){var n=(0,i.Z)(["\n  mutation GenerateMSURL($type: String!, $id: Int!) {\n    genenrateMSURL(id: $id, type: $type) {\n      url\n    }\n  }\n"]);return m=function(){return n},n}function p(){var n=(0,i.Z)(["\n  mutation signoutMS($id: Int!, $type: String!, $email: String!) {\n    signoutMS(id: $id, type: $type, email: $email) {\n      error\n      msId\n      success\n    }\n  }\n"]);return p=function(){return n},n}function _(){var n=(0,i.Z)(["\n  query getAccountMeta($id: Int!) {\n    account: Account_by_pk(id: $id) {\n      meta\n    }\n  }\n"]);return _=function(){return n},n}function $(){var n=(0,i.Z)(["\n  query user($id: Int!) {\n    user: User_by_pk(id: $id) {\n      meta\n      invoiceThreshold\n      quoteThreshold\n    }\n  }\n"]);return $=function(){return n},n}function f(){var n=(0,i.Z)(["\n  query GetAccountUserMeta($userId: Int!, $accountId: Int!) {\n    accountUser: Account_User(where: { userId: { _eq: $userId }, accountId: { _eq: $accountId } }) {\n      meta\n    }\n  }\n"]);return f=function(){return n},n}function g(){var n=(0,i.Z)(["\n  mutation UpdateAccountUserByUserIdAccoutId(\n    $userId: Int!\n    $accountId: Int!\n    $changes: Account_User_set_input!\n  ) {\n    update_Account_User(\n      where: { userId: { _eq: $userId }, accountId: { _eq: $accountId } }\n      _set: $changes\n    ) {\n      returning {\n        id\n      }\n    }\n  }\n"]);return g=function(){return n},n}function I(){var n=(0,i.Z)(["\n  mutation updateAccount($accountId: Int!, $set: Account_set_input!) {\n    update_Account_by_pk(pk_columns: { id: $accountId }, _set: $set) {\n      id\n    }\n  }\n"]);return I=function(){return n},n}function y(){var n=(0,i.Z)(["\n  mutation updateUserMeta($userId: Int!, $meta: jsonb!) {\n    update_User_by_pk(pk_columns: { id: $userId }, _set: { meta: $meta }) {\n      id\n      meta\n    }\n  }\n"]);return y=function(){return n},n}function b(){var n=(0,i.Z)(['\n  query userDevices($accountId: Int!) {\n    users: User(\n      where: {\n        Account_Users: { accountId: { _eq: $accountId }, status: { _eq: "active" } }\n        UserDevices: { status: { _eq: "active" } }\n        status: { _eq: "active" }\n      }\n    ) {\n      id\n      fullName\n      devices: UserDevices(\n        order_by: { updatedAt: desc_nulls_last }\n        where: { status: { _eq: "active" } }\n        limit: 1\n      ) {\n        id\n        playerId\n      }\n    }\n  }\n']);return b=function(){return n},n}function h(){var n=(0,i.Z)(['\n  query GetAccountLocations($accountId: Int, $limit: Int, $offset: Int) {\n    location: Location(\n      offset: $offset\n      limit: $limit\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      id\n      name\n      accountLocations: Account_Locations {\n        id\n      }\n      addresses: Addresses(where: { entity: { _eq: "Location" }, registered: { _eq: true } }) {\n        id\n        status\n        address: Address {\n          id\n          name\n          addressLine1\n          postCode\n        }\n      }\n    }\n    meta: Location_aggregate(\n      where: {\n        Account_Locations: {\n          accountId: { _eq: $accountId }\n          Account: { type: { _eq: "customer" } }\n        }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']);return h=function(){return n},n}function v(){var n=(0,i.Z)(["\n  mutation InsertUserAccountLocations(\n    $accountUserId: Int!\n    $objects: [User_Account_Location_insert_input!]!\n  ) {\n    delete_User_Account_Location(where: { accountUserId: { _eq: $accountUserId } }) {\n      affected_rows\n    }\n    insert_User_Account_Location(objects: $objects) {\n      affected_rows\n      returning {\n        id\n      }\n    }\n  }\n"]);return v=function(){return n},n}var q=(0,r.Ps)(a()),S=(0,r.Ps)(o()),x=(0,r.Ps)(s()),A=(0,r.Ps)(u()),Z=(0,r.Ps)(d()),j=(0,r.Ps)(c()),k=(0,r.Ps)(l()),U=(0,r.Ps)(m()),L=(0,r.Ps)(p()),T=(0,r.Ps)(_()),D=(0,r.Ps)($()),C=(0,r.Ps)(f()),w=(0,r.Ps)(g()),P=(0,r.Ps)(I()),R=(0,r.Ps)(y()),N=(0,r.Ps)(b()),J=(0,r.Ps)(h()),F=(0,r.Ps)(v())},9492:function(n,e,t){"use strict";t.d(e,{S:function(){return i}});var i=function(n,e){var t=document.createElement("a");"string"==typeof t.download?(document.body.appendChild(t),t.download=e,t.href=n,t.click(),document.body.removeChild(t)):location.replace(n)}},97432:function(n,e,t){"use strict";t.d(e,{l:function(){return i}});var i=function(n,e){var t=Math.pow(10,e);return Math.round(n*t)/t}},73760:function(n,e,t){"use strict";t.d(e,{O:function(){return i},v:function(){return r}});var i=[{text:"Country",value:""},{text:"United Kingdom",value:1},{text:"Ireland",value:4}],r=[{label:"United Kingdom",value:1},{label:"Ireland",value:4}]},98552:function(n,e,t){"use strict";t.d(e,{SR:function(){return o},Tq:function(){return s},YK:function(){return a},cJ:function(){return r},pX:function(){return i}});var i=["customerVat","supplier"],r=["ProformaInvoiceCustomer","ProformaInvoiceSupplier"],a=["customerPpmInvoice","supplierPpmInvoice"],o={customer:["customerVat","ProformaInvoiceCustomer","customerPpmInvoice"],supplier:["supplier","ProformaInvoiceSupplier","supplierPpmInvoice"]},s={customerVat:"Customer VAT Invoice",supplier:"Supplier Invoice",ProformaInvoiceCustomer:"Customer ad-hoc Invoice",ProformaInvoiceSupplier:"Supplier ad-hoc Invoice",customerPpmInvoice:"PPM Customer Invoice",supplierPpmInvoice:"PPM Supplier Invoice"}},25467:function(n,e,t){"use strict";t.r(e);var i=t(85893),r=t(58849),a=t(93203),o={filterType:"page"},s={filterType:"page"},u={filterType:"page"},d=function(){return(0,i.jsx)(a.A,{showLocationSelector:!0,calendarInitialFilters:o,tableInitialFilters:s,itemsInitialFilters:u})};d.getLayout=function(n){return(0,i.jsx)(r.Z,{children:n})},e.default=d}},function(n){n.O(0,[3662,630,6898,9809,2283,212,8890,619,2583,4135,8579,6043,1838,4244,3911,1417,3776,1564,2329,8500,778,4046,1023,7454,1870,2797,1047,8062,6313,597,3754,1050,4030,4191,1121,1836,4296,8335,8849,8344,6733,7554,6096,8372,3203,9774,2888,179],function(){return n(n.s=68430)}),_N_E=n.O()}]);