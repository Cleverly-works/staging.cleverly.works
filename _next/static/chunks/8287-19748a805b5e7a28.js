"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8287,4972],{43006:function(e,n,t){t.d(n,{$z:function(){return d},A5:function(){return q},G2:function(){return $},GU:function(){return _},I2:function(){return m},Pu:function(){return p},a6:function(){return v},eD:function(){return f},lV:function(){return y}});var i=t(26042),o=t(69396),a=t(29815),r=t(30381),s=t.n(r),u=t(83704),l=t.n(u),c=t(25410);l()(s());var d=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0,t=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0,o={};if(o.assetSelected=null,o.costCategorySelected=null,o.customerSelected=null,o.customerUserSelected=null,o.locationSelected=null,o.sublocationSelected=null,o.managerSelected=null,o.serviceSelected=null,o.siteVisitReq=!1,o.taxonomyId_ShortDesc=null,o.assetCategorySelected=null,o.access=null,o.paymentMethod="invoice",o.reportPassFail=!1,o.reportPassFailTitle="",o.requireReportRecommendations=!1,o.tags=[],e.customer&&(o.customerSelected={value:e.customer.id,label:e.customer.name}),e.location){var r,s,u,l,d,m=e.location.customerAssociations;o.locationSelected={value:e.location.id,label:e.location.name},m&&(o.customerSelected={value:null==m?void 0:null===(s=m[0])||void 0===s?void 0:null===(u=s.customer)||void 0===u?void 0:u.id,label:null==m?void 0:null===(l=m[0])||void 0===l?void 0:null===(d=l.customer)||void 0===d?void 0:d.name})}if(e.asset&&(o.assetSelected={value:e.asset.id,label:e.asset.name},o.assetCategorySelected={value:null===(y=e.asset)||void 0===y?void 0:null===(f=y.Category)||void 0===f?void 0:f.id,label:null===(v=e.asset)||void 0===v?void 0:null===($=v.Category)||void 0===$?void 0:$.name}),n("admin")&&(o.managerSelected={value:t.id,label:"".concat(t.nameFirst," ").concat(t.nameLast)}),(null===(r=o.tags)||void 0===r?void 0:r.length)&&(o.Taxonomy={data:(0,a.Z)(o.tags?(0,c.O)(o.tags):[])}),n("customer")&&(o.customerUserSelected={value:t.id,label:"".concat(t.nameFirst," ").concat(t.nameLast)}),e.parentJob){var y,f,v,$,_,q,p,I,g,b=e.parentJob,S=b.access,h=b.answers,x=b.assetCategory,T=b.assets,w=b.costCategoryTaxonomy,Z=b.customer,C=b.customerUser,F=b.manager,k=b.siteVisitAt,G=b.service,P=b.shortJobDesc,U=b.location,L=b.sublocation;o.access=S,Z&&(o.customerSelected={value:Z.id,label:Z.name}),C&&(o.customerUserSelected={value:C.id,label:"".concat(C.nameFirst," ").concat(C.nameLast)}),U&&(o.locationSelected={value:U.id,label:U.name}),L&&(o.sublocationSelected={value:L.id,label:L.name}),F&&(o.managerSelected={value:F.id,label:"".concat(F.nameFirst," ").concat(F.nameLast),accounts:F.accounts}),(null==T?void 0:T.length)>0&&(o.assetSelected=T.map(function(e){return{value:e.asset.id,label:e.asset.name,assetId:e.id,jobId:e.entityId}})),x&&(o.assetCategorySelected={value:x.id,label:x.name}),"true"===i&&(o.title="Recall: ".concat((null===(_=null==b?void 0:b.shortJobDesc[0])||void 0===_?void 0:_.taxonomy.name)||b.title),o.description=b.description,o.reference=b.reference,o.source=b.source,o.slaId=b.slaId,o.paymentMethod=b.paymentMethod,o.pricing=b.pricing,o.taxonomyId_ShortDesc={value:P[0].taxonomyId,label:null===(q=P[0])||void 0===q?void 0:null===(p=q.taxonomy)||void 0===p?void 0:p.name,meta:null===(I=P[0])||void 0===I?void 0:null===(g=I.taxonomy)||void 0===g?void 0:g.meta},G&&(o.serviceSelected={value:G.id,label:G.name}),k&&(o.siteVisitReq=!0),o.questions=h.map(function(e){var n;return{id:e.id,taxonomyId:e.taxonomyId,comments:e.comments,name:null===(n=e.taxonomy)||void 0===n?void 0:n.name}}),w&&(o.costCategorySelected={value:w.id,label:w.name}))}return o},m=function(e){var n,t,i={};return Object.keys(e).map(function(n){var t=e[n];return"number"==typeof t&&(t=t.toString()),["timingStart","timingEnd","quoteDue","quoteDueSupplier","siteVisitStart","siteVisitEnd"].includes(n)&&null!==t&&(t=new Date(t)),i[n]=t,i}),i.siteVisitReq||(i.siteVisitWeekends=!1),delete i.siteVisitReq,i.siteVisitWeekends?i.siteVisitWeekends=!0:i.siteVisitWeekends=!1,e.customer&&(i.customerSelected={value:e.customer.id,label:e.customer.name}),e.customerUser&&(i.customerUserSelected={value:e.customerUser.id,label:"".concat(e.customerUser.nameFirst," ").concat(e.customerUser.nameLast)}),e.location&&(i.locationSelected={value:e.location.id,label:e.location.name,permitsRequired:null==e?void 0:null===(t=e.location)||void 0===t?void 0:t.permitsRequired}),e.sublocation&&(i.sublocationSelected={value:e.sublocation.id,label:e.sublocation.name}),(null===(n=e.issueTypes[0])||void 0===n?void 0:n.issue)&&(i.issueType={label:e.issueTypes[0].issue.name,value:e.issueTypes[0].issue.id}),e.manager&&(i.managerSelected={value:e.manager.id,label:"".concat(e.manager.nameFirst," ").concat(e.manager.nameLast),accounts:e.manager.accounts}),e.service&&(i.serviceSelected={value:e.service.id,label:e.service.name}),e.assets&&e.assets.length>0?(i.assetSelected=e.assets.map(function(e){return{value:e.asset.id,label:e.asset.name,assetId:e.id,jobId:e.entityId}}),delete i.assets):i.assetSelected=[],i.assetCategory&&(i.assetCategorySelected={value:i.assetCategory.id,label:i.assetCategory.name},delete i.assetCategory),i.siteVisitReq=!1,e.siteVisitStart&&(i.siteVisitReq=!0),i.shortJobDesc&&i.shortJobDesc.length>0&&(i.taxonomyId_ShortDesc={value:i.shortJobDesc[0].taxonomyId,label:i.shortJobDesc[0].taxonomy.name,meta:i.shortJobDesc[0].taxonomy.meta}),i.questions=i.answers.map(function(e){var n;return{id:e.id,taxonomyId:e.taxonomyId,comments:e.comments,name:null===(n=e.taxonomy)||void 0===n?void 0:n.name}}),delete i.answers,i.costCategoryTaxonomy?i.costCategorySelected={value:i.costCategoryTaxonomy.id,label:i.costCategoryTaxonomy.name}:i.costCategorySelected=null,i.allowTimingNormalHours=!e.timingNormalHours,e.estimatedDuration&&e.estimatedDurationUnit&&(i.estimatedDuration=s().duration(e.estimatedDuration,"milliseconds").as(e.estimatedDurationUnit)),i},y=function(e){var n,t,r,u,l,d,m,y=e.query,f=e.data,v=e.hasRole,$=e.user,_=e.type;f.title=null,["slaId","customerSpendThreshold"].map(function(e){return f[e]?f[e]=parseInt(f[e]):f[e]=null,f}),delete f.timeSpan,["quoteDue","quoteDueSupplier","timingEnd","timingStart","endDate"].map(function(e){return f[e]&&(f[e]=s()(f[e]).utc().format()),f}),f.siteVisitReq?["siteVisitStart","siteVisitEnd"].map(function(e){return f[e]&&(f[e]=s()(f[e]).format()),f}):(f.siteVisitStart=null,f.siteVisitEnd=null),f.siteVisitWeekends="true"===f.siteVisitWeekends,delete f.siteVisitReq,["costCategory","customer","customerUser","location","manager","service"].map(function(e){return f[e+"Selected"]&&f[e+"Selected"].value&&(f[e+"Id"]=f[e+"Selected"].value),delete f[e+"Selected"],f}),(null===(n=f.sublocationSelected)||void 0===n?void 0:n.value)?f.sublocationId=null===(r=f.sublocationSelected)||void 0===r?void 0:r.value:f.sublocationId=null,delete f.sublocationSelected,"allowTimingNormalHours"===f.allowTimingNormalHours?f.timingNormalHours=!1:f.timingNormalHours=!0,delete f.allowTimingNormalHours,f.multipleDays&&"fixed"===f.pricing||(f.endDate=null),delete f.multipleDays;var q="";y.quoted?(f.type="quote",f.serviceId=null,f.quoted=!0,f.pricing="fixed",q="quoteNew"):"ppm"===_?f.type="ppm":(f.type="reactive",q=v("admin")?"raised":"pending"),y.id||(f.status=q,f.JobTimings={data:{status:f.status,userId:$.id}},v("admin")?f.adminId=$.accountId:f.adminId=$.adminId||1),y.parentId&&(f.parentId=parseInt(y.parentId)),f.timing&&"at"===f.timing&&(f.timingEnd=null),"foc"===f.quoteCharge&&(f.quoteChargeAmount=null);var p=[];if(f.questions&&(p=JSON.parse(f.questions).map(function(e){return{comments:e.comments,entity:e.entity,taxonomyId:e.taxonomyId}})),!y.id&&f.taxonomyId_ShortDesc&&(f.Taxonomy={data:[{entity:"Job",taxonomyId:f.taxonomyId_ShortDesc.value}].concat((0,a.Z)(p))}),(null===(t=f.tags)||void 0===t?void 0:t.length)&&(f.Taxonomy={data:(0,a.Z)(null!==(l=null===(u=f.Taxonomy)||void 0===u?void 0:u.data)&&void 0!==l?l:[]).concat((0,a.Z)((0,c.O)(f.tags)))}),f.issueType&&(f.Taxonomy={data:(0,a.Z)(null!==(m=null===(d=f.Taxonomy)||void 0===d?void 0:d.data)&&void 0!==m?m:[]).concat([{entity:"Job",taxonomyId:f.issueType.value}])}),delete f.taxonomyId_ShortDesc,delete f.questions,f.estimatedDuration&&f.estimatedDurationUnit?f.estimatedDuration=s().duration(f.estimatedDuration,f.estimatedDurationUnit).as("milliseconds"):(delete f.estimatedDuration,delete f.estimatedDurationUnit),f.meta=(0,o.Z)((0,i.Z)({},f.meta),{customerSignature:f.customerSignature,supplierSignature:f.supplierSignature}),delete f.customerSignature,delete f.supplierSignature,f.assetSelected&&f.assetSelected.length>0){var I=f.assetSelected.map(function(e){return{assetId:e.value,status:"active",entity:"Job"}});f.Assets={data:I}}return delete f.assetSelected,f.assetCategoryId=f.assetCategorySelected&&f.assetCategorySelected.value,delete f.assetCategorySelected,delete f.tags,delete f.issueType,f},f=function(e,n){if(n){if(!(null===(t=e.taxonomyId_ShortDesc)||void 0===t?void 0:t.value))return{};var t,o,r,s=JSON.parse(e.questions).map(function(e){return{comments:e.comments,entityId:n,entity:"Job",taxonomyId:e.taxonomyId}});return[{entityId:n,entity:"Job",taxonomyId:e.taxonomyId_ShortDesc.value}].concat((0,a.Z)((null===(o=e.issueType)||void 0===o?void 0:o.value)?[{entityId:n,entity:"Job",taxonomyId:e.issueType.value}]:[]),(0,a.Z)((0,c.O)(null!==(r=e.tags)&&void 0!==r?r:[]).map(function(e){return(0,i.Z)({entityId:n},e)})),(0,a.Z)(s))}},v=function(e,n){var t={meta:(0,o.Z)((0,i.Z)({},e.meta),{reporter:(0,o.Z)((0,i.Z)({},e.meta.reporter),{nameFirst:n.name.split(" ")[0],nameLast:n.name.split(" ")[1]||"",phone:n.phone,email:n.email,shouldSendNotifications:n.shouldSendNotifications})})};return delete n.name,delete n.phone,delete n.email,delete n.shouldSendNotifications,t},$=function(e){return{nameFirst:e.name.split(" ")[0],nameLast:e.name.split(" ")[1]||"",phone:e.phone,email:e.email,meta:{shouldSendNotifications:e.shouldSendNotifications}}},_=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"reactive",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{slas:[],customerSlas:[],locationSlas:[]},t=n.slas,i=n.customerSlas,o=n.locationSlas;return t.filter(function(n){return n.subtype===e}).map(function(e){var n=null==o?void 0:o.find(function(n){return n.slaId===e.id&&n.inUse}),t=null==i?void 0:i.find(function(n){return n.slaId===e.id&&n.inUse}),a=(null==n?void 0:n.notes)||(null==t?void 0:t.notes),r=(null==n?void 0:n.onSite)||(null==t?void 0:t.onSite),s=(null==n?void 0:n.onSiteUnit)||(null==t?void 0:t.onSiteUnit),u=(null==n?void 0:n.quoteReturned)||(null==t?void 0:t.quoteReturned),l=(null==n?void 0:n.quoteReturnedUnit)||(null==t?void 0:t.quoteReturnedUnit);return{id:e.id,label:e.label,value:e.id,notes:a||e.notes,onSite:r||e.onSite,onSiteUnit:s||e.onSiteUnit,quoteReturned:u||e.quoteReturned,quoteReturnedUnit:l||e.quoteReturnedUnit,disabled:!!((null==o?void 0:o.find(function(n){return n.slaId===e.id&&!n.inUse}))||(null==i?void 0:i.find(function(n){return n.slaId===e.id&&!n.inUse})))}})},q=function(e,n){var t=[];if(n.Media_Entity){var a=!0,r=!1,s=void 0;try{for(var u,l=n.Media_Entity.data[Symbol.iterator]();!(a=(u=l.next()).done);a=!0){var c=u.value,d=(0,o.Z)((0,i.Z)({},c),{entityId:e});t.push(d)}}catch(m){r=!0,s=m}finally{try{a||null==l.return||l.return()}finally{if(r)throw s}}delete n.Media_Entity}return t},p=function(e,n,t){return{managerSelected:n("admin")?{value:t.id,label:"".concat(t.nameFirst," ").concat(t.nameLast)}:null,access:e.location.access,sublocationSelected:e.sublocation?{value:e.sublocation.id,label:e.sublocation.name}:null,locationSelected:{value:e.location.id,label:e.location.name},customerSelected:{value:e.customer.id,label:e.customer.name},customerUserSelected:{value:e.customerUser.id,label:e.customerUser.name},assetSelected:[{value:e.asset.id,label:e.asset.name}],assetCategorySelected:e.assetCategory?{value:e.assetCategory.id,label:e.assetCategory.name}:null}}},4972:function(e,n,t){t.d(n,{A5:function(){return el},Ak:function(){return j},Cj:function(){return X},K4:function(){return ea},Oq:function(){return eu},Qn:function(){return V},RJ:function(){return K},SW:function(){return N},T_:function(){return H},UH:function(){return E},UM:function(){return ei},Ve:function(){return Y},_d:function(){return B},_f:function(){return eo},by:function(){return z},cz:function(){return A},he:function(){return J},j$:function(){return M},kB:function(){return en},kU:function(){return ee},kx:function(){return O},nD:function(){return R},nP:function(){return es},pY:function(){return er},qd:function(){return D},t1:function(){return W},yR:function(){return Q},zR:function(){return et}});var i=t(7297),o=t(75063);function a(){var e=(0,i.Z)(["\n  query GetAddressForSelect($q: String, $entity: String!, $entityId: Int!) {\n    items: Address(\n      where: {\n        Address_Entities: { entity: { _eq: $entity }, entityId: { _eq: $entityId } }\n        _or: [\n          { addressLine1: { _eq: $q } }\n          { addressLine2: { _eq: $q } }\n          { addressLine3: { _eq: $q } }\n          { county: { _eq: $q } }\n          { postCode: { _eq: $q } }\n          { city: { _eq: $q } }\n        ]\n      }\n    ) {\n      label: addressLine1\n      value: id\n      id\n      name\n      addressLine1\n      addressLine2\n      addressLine3\n      postCode\n      county\n      country: Country {\n        name\n      }\n      city\n      Address_Entities {\n        invoice\n      }\n    }\n  }\n"]);return a=function(){return e},e}function r(){var e=(0,i.Z)(["\n  query GetAccountsForSelect($q: String, $type: String, $limit: Int, $offset: Int) {\n    items: Account(\n      where: { name: { _ilike: $q }, type: { _eq: $type } }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n"]);return r=function(){return e},e}function s(){var e=(0,i.Z)(['\n  query GetTaxonomy($q: String, $id: Int) {\n    items: Taxonomy(\n      where: { type: { _eq: "assetCategory" }, status: { _eq: "active" } }\n      order_by: { name: asc }\n    ) {\n      label: name\n      options: Taxonomies(\n        where: {\n          type: { _eq: "assetCategory" }\n          name: { _ilike: $q }\n          id: { _eq: $id }\n          status: { _eq: "active" }\n        }\n        order_by: { name: asc }\n      ) {\n        value: id\n        label: name\n      }\n    }\n  }\n']);return s=function(){return e},e}function u(){var e=(0,i.Z)(["\n  query GetAssetsForSelect(\n    $locationId: Int\n    $q: String\n    $categoryId: Int\n    $bookable: String\n    $limit: Int\n    $offset: Int\n  ) {\n    items: Asset(\n      where: {\n        categoryId: { _eq: $categoryId }\n        locationId: { _eq: $locationId }\n        name: { _ilike: $q }\n        bookable: { _eq: $bookable }\n      }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n"]);return u=function(){return e},e}function l(){var e=(0,i.Z)(['\n  query GetCustomersForSelect($q: String, $limit: Int, $offset: Int) {\n    items: Account(\n      where: { name: { _ilike: $q }, type: { _eq: "customer" } }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      admin: Admins {\n        id: adminId\n      }\n      label: name\n      spendThreshold: meta(path: "$.finance.spendThreshold")\n      serviceRateLabour: meta(path: "$.finance.serviceRateLabour")\n      serviceRateExpenses: meta(path: "$.finance.serviceRateExpenses")\n      value: id\n    }\n  }\n']);return l=function(){return e},e}function c(){var e=(0,i.Z)(["\n  query GetJobsForSelect($_q: Int, $locationId: Int) {\n    items: Job(\n      where: {\n        Location: { id: { _eq: $locationId } }\n        _or: [{ id: { _eq: $_q } }, { Invoices: { id: { _eq: $_q } } }]\n      }\n      order_by: { title: asc }\n    ) {\n      label: label\n      value: id\n      number\n      createdAt\n      description\n      status\n      timingStart\n      title\n      type\n      Location {\n        name\n      }\n      Taxonomy {\n        Taxonomy {\n          shortJobDescription: name\n        }\n      }\n    }\n  }\n"]);return c=function(){return e},e}function d(){var e=(0,i.Z)(['\n  query GetManagersForSelect($userId: Int, $accountId: Int!, $q: String) {\n    items: User(\n      where: {\n        status: { _eq: "active" }\n        Account_Users: {\n          role: { _in: ["owner", "manager"] }\n          status: { _eq: "active" }\n          Account: { id: { _eq: $accountId } }\n        }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        id: { _neq: $userId }\n      }\n      order_by: { nameFirst: asc }\n    ) {\n      label: fullName\n      value: id\n    }\n  }\n']);return d=function(){return e},e}function m(){var e=(0,i.Z)(['\n  query GetManagersForSelect(\n    $userId: Int\n    $accountId: Int!\n    $q: String\n    $invoiceThreshold: numeric\n    $quoteThreshold: numeric\n  ) {\n    items: User(\n      where: {\n        status: { _eq: "active" }\n        Account_Users: {\n          role: { _in: ["owner", "manager"] }\n          status: { _eq: "active" }\n          Account: { id: { _eq: $accountId } }\n        }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n        id: { _neq: $userId }\n        _and: [\n          {\n            _or: [\n              { invoiceThreshold: { _gt: $invoiceThreshold } }\n              { invoiceThreshold: { _is_null: true } }\n            ]\n          }\n          {\n            _or: [\n              { quoteThreshold: { _gt: $quoteThreshold } }\n              { quoteThreshold: { _is_null: true } }\n            ]\n          }\n        ]\n      }\n      order_by: { nameFirst: asc }\n    ) {\n      label: fullName\n      value: id\n    }\n  }\n']);return m=function(){return e},e}function y(){var e=(0,i.Z)(["\n  query GetPostCodeAreaForSelect($countryId: Int, $q: String) {\n    items: PostcodeArea(\n      where: { name: { _ilike: $q }, countryId: { _eq: $countryId } }\n      order_by: { name: asc }\n    ) {\n      area\n      label: name\n      value: id\n    }\n  }\n"]);return y=function(){return e},e}function f(){var e=(0,i.Z)(['\n  query GetPropertiesForSelect($where: Location_bool_exp, $limit: Int, $offset: Int) {\n    items: Location(where: $where, order_by: { name: asc }, limit: $limit, offset: $offset) {\n      label: name\n      value: id\n      access\n      permitsRequired\n      registeredAddress: Addresses(\n        where: { entity: { _eq: "Location" }, registered: { _eq: true } }\n      ) {\n        address: Address {\n          id\n          addressLine1\n          addressLine2\n          addressLine3\n          county\n          country: Country {\n            name\n          }\n          postCode\n          city\n        }\n      }\n    }\n  }\n']);return f=function(){return e},e}function v(){var e=(0,i.Z)(['\n  query GetServicesForSelect($q: String, $limit: Int, $offset: Int) {\n    items: Service(\n      where: { name: { _ilike: $q }, status: { _eq: "active" } }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n']);return v=function(){return e},e}function $(){var e=(0,i.Z)(["\n  query GetSlasForSelect($q: String, $adminId: Int, $type: String) {\n    items: SLA(\n      where: { name: { _ilike: $q }, type: { _eq: $type }, adminId: { _eq: $adminId } }\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n"]);return $=function(){return e},e}function _(){var e=(0,i.Z)(["\n  query GetSlasForSelectNew($where: SLA_bool_exp, $limit: Int, $offset: Int) {\n    items: SLA(where: $where, order_by: { name: asc }, limit: $limit, offset: $offset) {\n      label: name\n      value: id\n    }\n  }\n"]);return _=function(){return e},e}function q(){var e=(0,i.Z)(["\n  query GetSuppliersForSelect($where: Account_bool_exp, $limit: Int, $offset: Int) {\n    items: Account(where: $where, limit: $limit, offset: $offset, order_by: { name: asc }) {\n      label: name\n      value: id\n    }\n  }\n"]);return q=function(){return e},e}function p(){var e=(0,i.Z)(['\n  query GetUsersForSelect($accountId: Int, $q: String, $limit: Int, $offset: Int) {\n    items: User(\n      where: {\n        status: { _eq: "active" }\n        Account_Users: {\n          accountId: { _eq: $accountId }\n          isContact: { _eq: true }\n          status: { _eq: "active" }\n        }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n      }\n      order_by: { nameFirst: asc }\n      limit: $limit\n      offset: $offset\n    ) {\n      label: fullName\n      value: id\n      email\n      phone\n    }\n  }\n']);return p=function(){return e},e}function I(){var e=(0,i.Z)(['\n  query GetUsersForSelect($q: String) {\n    items: User(\n      where: {\n        status: { _eq: "active" }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n      }\n      order_by: { nameFirst: asc }\n    ) {\n      label: fullName\n      value: id\n      email\n      phone\n    }\n  }\n']);return I=function(){return e},e}function g(){var e=(0,i.Z)(["\n  query GetTaxonomyGroupForSelect($q: String, $type: String!) {\n    items: Taxonomy(\n      where: { isGroup: { _eq: true }, name: { _ilike: $q }, type: { _eq: $type } }\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n"]);return g=function(){return e},e}function b(){var e=(0,i.Z)(['\n  query GetTaxonomy($q: String) {\n    items: Taxonomy(where: { type: { _eq: "expenseCategoryGroup" } }, order_by: { name: asc }) {\n      label: name\n      options: Taxonomies(\n        where: { type: { _eq: "expenseCategory" }, name: { _ilike: $q } }\n        order_by: { name: asc }\n      ) {\n        value: id\n        label: name\n      }\n    }\n  }\n']);return b=function(){return e},e}function S(){var e=(0,i.Z)(['\n  query GetCompliancesForSelect($q: String, $locationId: Int, $limit: Int, $offset: Int) {\n    items: Taxonomy(\n      where: { type: { _eq: "complianceCategory" } }\n      order_by: { name: asc }\n      limit: $limit\n      offset: $offset\n    ) {\n      label: name\n      options: Compliances(\n        where: {\n          name: { _ilike: $q }\n          Compliance_Entities: { Location: { id: { _eq: $locationId } } }\n        }\n        order_by: { name: asc }\n      ) {\n        value: id\n        label: name\n      }\n    }\n  }\n']);return S=function(){return e},e}function h(){var e=(0,i.Z)(["\n  query GetUserRole($userId: Int!, $accountId: Int!) {\n    accountUsers: Account_User(\n      where: { userId: { _eq: $userId }, accountId: { _eq: $accountId } }\n    ) {\n      role\n    }\n  }\n"]);return h=function(){return e},e}function x(){var e=(0,i.Z)(["\n  query GetSublocationsForSelect($locationId: Int!, $q: String, $limit: Int, $offset: Int) {\n    items: Sublocation(\n      where: { name: { _ilike: $q }, locationId: { _eq: $locationId }, active: { _eq: true } }\n      limit: $limit\n      offset: $offset\n      order_by: { createdAt: desc }\n    ) {\n      value: id\n      label: name\n    }\n  }\n"]);return x=function(){return e},e}function T(){var e=(0,i.Z)(['\n  query GetTaxonomy($q: String, $limit: Int, $offset: Int) {\n    items: Taxonomy(\n      where: {\n        type: { _eq: "assetCategory" }\n        isGroup: { _eq: false }\n        status: { _eq: "active" }\n        name: { _ilike: $q }\n      }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n']);return T=function(){return e},e}function w(){var e=(0,i.Z)(["\n  query GetTaxonomyForSelect(\n    $where: Taxonomy_bool_exp\n    $limit: Int\n    $offset: Int\n    $orderBy: Taxonomy_order_by!\n    $includeMeta: Boolean! = false\n  ) {\n    items: Taxonomy(where: $where, limit: $limit, offset: $offset, order_by: [$orderBy]) {\n      value: id\n      label: name\n      meta @include(if: $includeMeta)\n    }\n  }\n"]);return w=function(){return e},e}function Z(){var e=(0,i.Z)(['\n  query GetTagsForTask($q: String!, $limit: Int = 50, $offset: Int = 0) {\n    items: Taxonomy(\n      where: { name: { _ilike: $q }, status: { _eq: "active" }, type: { _eq: "taskTags" } }\n      limit: $limit\n      offset: $offset\n      order_by: { id: desc }\n    ) {\n      value: id\n      label: name\n    }\n  }\n']);return Z=function(){return e},e}function C(){var e=(0,i.Z)(['\n  query GetTagsForEntity(\n    $entityId: Int\n    $entity: String!\n    $q: String!\n    $limit: Int = 50\n    $offset: Int = 0\n  ) {\n    tags: Taxonomy(\n      where: {\n        name: { _ilike: $q }\n        status: { _eq: "active" }\n        type: { _eq: "taskTags" }\n        _not: { Taxonomy_Entities: { entity: { _eq: $entity }, entityId: { _eq: $entityId } } }\n      }\n      limit: $limit\n      offset: $offset\n      order_by: { id: desc }\n    ) {\n      id\n      name\n      meta\n    }\n  }\n']);return C=function(){return e},e}function F(){var e=(0,i.Z)(['\n  query GetEntityTags($entityId: Int!, $entity: String!) {\n    tags: Taxonomy_Entity(\n      where: {\n        entity: { _eq: $entity }\n        entityId: { _eq: $entityId }\n        Taxonomy: { status: { _eq: "active" }, type: { _eq: "taskTags" } }\n      }\n      order_by: { id: desc }\n    ) {\n      id\n      tag: Taxonomy {\n        id\n        name\n        meta\n      }\n    }\n  }\n']);return F=function(){return e},e}function k(){var e=(0,i.Z)(["\n  query GetCustomerManagers($accountId: Int, $q: String, $limit: Int, $offset: Int) {\n    items: User(\n      where: { Account_Users: { accountId: { _eq: $accountId } }, fullName: { _ilike: $q } }\n      order_by: { fullName: asc }\n      limit: $limit\n      offset: $offset\n    ) {\n      label: fullName\n      value: id\n    }\n  }\n"]);return k=function(){return e},e}function G(){var e=(0,i.Z)(["\n  query GetServiceSchedulesForSelect(\n    $q: String\n    $serviceId: Int\n    $entity: service_schedule_entity\n    $entityId: Int\n    $limit: Int = 50\n    $offset: Int = 0\n  ) {\n    items: ServiceSchedule(\n      where: {\n        name: { _ilike: $q }\n        serviceId: { _eq: $serviceId }\n        entity: { _eq: $entity }\n        entityId: { _eq: $entityId }\n      }\n      limit: $limit\n      offset: $offset\n      order_by: { name: asc }\n    ) {\n      label: name\n      value: id\n    }\n  }\n"]);return G=function(){return e},e}function P(){var e=(0,i.Z)(['\n  query GetPropertyById($id: Int!) {\n    item: Location_by_pk(id: $id) {\n      label: name\n      value: id\n      access\n      registeredAddress: Addresses(\n        where: { entity: { _eq: "Location" }, registered: { _eq: true } }\n      ) {\n        address: Address {\n          id\n          addressLine1\n          addressLine2\n          addressLine3\n          county\n          country: Country {\n            name\n            code\n          }\n          postCode\n          city\n        }\n      }\n    }\n  }\n']);return P=function(){return e},e}function U(){var e=(0,i.Z)(['\n  query GetCompliancesForSelectNew($q: String, $locationId: Int, $limit: Int, $offset: Int) {\n    items: Compliance(\n      where: {\n        name: { _ilike: $q }\n        Category: { type: { _eq: "complianceCategory" } }\n        Compliance_Entities: { entity: { _eq: "Location" }, Location: { id: { _eq: $locationId } } }\n      }\n      order_by: { name: asc }\n      limit: $limit\n      offset: $offset\n    ) {\n      value: id\n      label: name\n      category: Category {\n        label: name\n      }\n    }\n  }\n']);return U=function(){return e},e}function L(){var e=(0,i.Z)(['\n  query GetTaskAssignedToForSelect(\n    $accountId: Int\n    $q: String\n    $limit: Int = 50\n    $offset: Int = 0\n  ) {\n    items: User(\n      where: {\n        status: { _eq: "active" }\n        Account_Users: { accountId: { _eq: $accountId }, status: { _eq: "active" } }\n        _or: [{ nameFirst: { _ilike: $q } }, { nameLast: { _ilike: $q } }]\n      }\n      limit: $limit\n      offset: $offset\n      order_by: { nameFirst: asc }\n    ) {\n      label: fullName\n      value: id\n    }\n  }\n']);return L=function(){return e},e}var A=(0,o.Ps)(a()),D=(0,o.Ps)(r()),R=(0,o.Ps)(s()),E=(0,o.Ps)(u()),N=(0,o.Ps)(l()),V=(0,o.Ps)(c()),J=(0,o.Ps)(d()),j=(0,o.Ps)(m()),M=(0,o.Ps)(y()),B=(0,o.Ps)(f()),O=(0,o.Ps)(v()),W=(0,o.Ps)($()),H=(0,o.Ps)(_()),z=(0,o.Ps)(q()),Q=(0,o.Ps)(p()),K=(0,o.Ps)(I()),X=(0,o.Ps)(g()),Y=(0,o.Ps)(b()),ee=(0,o.Ps)(S()),en=(0,o.Ps)(h()),et=(0,o.Ps)(x()),ei=(0,o.Ps)(T()),eo=(0,o.Ps)(w());(0,o.Ps)(Z()),(0,o.Ps)(C()),(0,o.Ps)(F());var ea=(0,o.Ps)(k()),er=(0,o.Ps)(G()),es=(0,o.Ps)(P()),eu=(0,o.Ps)(U()),el=(0,o.Ps)(L())},22186:function(e,n,t){t.d(n,{V:function(){return d}});var i=t(26042),o=t(69396),a=t(85893),r=t(67294),s=t(45697),u=t.n(s),l=t(87918),c=t(41796),d=function(e){var n,t=e.chipProps,s=e.tagEntityId,u=e.name,d=e.color,m=e.onDelete,y=(0,r.useMemo)(function(){return m?(0,o.Z)((0,i.Z)({},t),{onDelete:function(e){e.stopPropagation(),m(s)}}):(0,i.Z)({},t)},[t,m,s]);return(0,a.jsx)(l.Z,(0,o.Z)((0,i.Z)({},y),{size:"small",label:u,sx:{fontSize:"11px",color:(n=d,(0,c.mi)(n,"#FFFFFF")>2.5?"#FFFFFF":"#000"),bgcolor:d,borderRadius:"0px 16px 16px 0px"}}))};d.defaultProps={chipProps:{},onDelete:null,color:"#f2f2f2"},d.propTypes={chipProps:u().object,tagEntityId:u().string.isRequired,name:u().string.isRequired,color:u().string.isRequired,onDelete:u().func.isRequired}},25410:function(e,n,t){t.d(n,{O:function(){return i}});var i=function(e){return e.map(function(e){return{entity:"Job",taxonomyId:e.tag.id}})}},42575:function(e,n,t){t.d(n,{Im:function(){return m},RQ:function(){return v},X4:function(){return _},fC:function(){return $},mW:function(){return y},ze:function(){return f}});var i=t(7297),o=t(75063);function a(){var e=(0,i.Z)(['\n  query GetTaxonomys(\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: Taxonomy_order_by!\n    $status: String = "active"\n    $type: String\n    $typeGroup: String\n    $parentId: Int\n    $fetchGroup: Boolean! = true\n    $id: Int\n    $isGroup: Boolean = false\n  ) {\n    taxonomy: Taxonomy(\n      limit: $limit\n      offset: $offset\n      where: {\n        name: { _ilike: $q }\n        status: { _eq: $status }\n        type: { _eq: $type }\n        parentId: { _eq: $parentId }\n        id: { _eq: $id }\n        isGroup: { _eq: $isGroup }\n      }\n      order_by: [$orderBy]\n    ) {\n      options: Taxonomies(\n        where: {\n          type: { _eq: $type }\n          name: { _ilike: $q }\n          id: { _eq: $id }\n          status: { _eq: "active" }\n        }\n        order_by: { name: asc }\n      ) {\n        value: id\n        label: name\n\n        childs: Taxonomies(order_by: { id: asc }, where: { status: { _eq: "active" } }) {\n          taxonomyId: id\n          name\n          type\n          meta\n          status\n        }\n      }\n      id\n      name\n      type\n      status\n      parentId\n      createdAt\n      meta\n      parent: Parent {\n        id\n        name\n        type\n      }\n      childs: Taxonomies(order_by: { id: asc }, where: { status: { _eq: "active" } }) {\n        taxonomyId: id\n        name\n        type\n        meta\n        status\n      }\n      jobs: Taxonomy_Entities_aggregate(\n        where: { Taxonomy: { type: { _eq: "jobTags" } }, entity: { _eq: "Job" } }\n      ) {\n        aggregate {\n          count\n        }\n      }\n    }\n    meta: Taxonomy_aggregate(\n      where: {\n        name: { _ilike: $q }\n        status: { _eq: $status }\n        type: { _eq: $type }\n        parentId: { _eq: $parentId }\n        id: { _eq: $id }\n        isGroup: { _eq: $isGroup }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n    taxonomyGroup: Taxonomy(where: { isGroup: { _eq: true }, type: { _eq: $typeGroup } })\n      @include(if: $fetchGroup) {\n      value: id\n      text: name\n    }\n  }\n']);return a=function(){return e},e}function r(){var e=(0,i.Z)(["\n  query GetTaxonomy($id: Int!) {\n    taxonomy: Taxonomy_by_pk(id: $id) {\n      id\n      name\n      type\n      status\n      parentId\n      createdAt\n      meta\n    }\n  }\n"]);return r=function(){return e},e}function s(){var e=(0,i.Z)(["\n  mutation AddTaxonomy($objects: [Taxonomy_insert_input!]!) {\n    insert_Taxonomy(objects: $objects) {\n      returning {\n        id\n        type\n      }\n    }\n  }\n"]);return s=function(){return e},e}function u(){var e=(0,i.Z)(["\n  mutation UpdateTaxonomy($id: Int!, $changes: Taxonomy_set_input) {\n    update_Taxonomy_by_pk(pk_columns: { id: $id }, _set: $changes) {\n      id\n      type\n    }\n  }\n"]);return u=function(){return e},e}function l(){var e=(0,i.Z)(["\n  query GeTaxonomyWithEntities($type: String!, $entity: String!, $entityId: Int!) {\n    questions: Taxonomy(where: { type: { _eq: $type } }) {\n      id\n      meta\n      name\n      status\n      taxonomy_entity: Taxonomy_Entities(\n        where: { entityId: { _eq: $entityId }, entity: { _eq: $entity } }\n      ) {\n        comments\n      }\n    }\n  }\n"]);return l=function(){return e},e}function c(){var e=(0,i.Z)(["\n  mutation InsertTaxonomyEntity(\n    $entity: String!\n    $entityId: Int!\n    $questions: [Taxonomy_Entity_insert_input!]!\n    $objectStatusLog: [StatusLog_insert_input!]!\n    $hasStatusLog: Boolean!\n  ) {\n    delete_Taxonomy_Entity(where: { entityId: { _eq: $entityId }, entity: { _eq: $entity } }) {\n      returning {\n        id\n      }\n    }\n    insert_Taxonomy_Entity(objects: $questions) {\n      returning {\n        id\n      }\n    }\n\n    insert_StatusLog(objects: $objectStatusLog) @include(if: $hasStatusLog) {\n      returning {\n        id\n      }\n    }\n  }\n"]);return c=function(){return e},e}function d(){var e=(0,i.Z)(["\n  query GetSlasForTemplate($where: SLA_bool_exp, $limit: Int, $offset: Int) {\n    slas: SLA(where: $where, order_by: { name: asc }, limit: $limit, offset: $offset) {\n      id\n      label: name\n      subtype\n      notes\n      onSite\n      onSiteUnit\n      quoteReturned\n      quoteReturnedUnit\n    }\n  }\n"]);return d=function(){return e},e}var m=(0,o.Ps)(a());(0,o.Ps)(r());var y=(0,o.Ps)(s()),f=(0,o.Ps)(u()),v=(0,o.Ps)(l()),$=(0,o.Ps)(c()),_=(0,o.Ps)(d())},32749:function(e,n,t){t.d(n,{l:function(){return f}});var i=t(26042),o=t(69396),a=t(99534),r=t(85893),s=t(67294),u=t(45697),l=t(6388),c=t(42575),d=t(49501),m=t(84043),y=function(e,n){var t,i,o,a=!0;return(null===(t=e.errors[e.name])||void 0===t?void 0:t.message)!==(null===(i=n.errors[n.name])||void 0===i?void 0:i.message)&&(a=!1),["name","type"].forEach(function(t){e[t]!==n[t]&&(a=!1)}),a},f=(0,s.memo)(function(e){var n,t,s,u=e.control,y=e.errors,f=e.label,v=e.name,$=e.register,_=e.type,q=e.filters,p=(0,a.Z)(e,["control","errors","label","name","register","type","filters"]),I=(s=(void 0===(t=(0,l.aM)(c.Im,{variables:(0,o.Z)((0,i.Z)({isGroup:"assetCategory"===_},q),{orderBy:{name:"asc"},type:_})}).data)?{taxonomy:[]}:t).taxonomy,"assetCategory"===_?s.map(function(e){return{label:e.name,options:e.options,childs:e.childs,meta:e.meta}}):s.map(function(e){return{label:e.name,value:e.id,childs:e.childs,meta:e.meta}}));return(0,r.jsx)(d.Z,{id:v,label:f,children:(0,r.jsx)(m.Z,(0,i.Z)((0,o.Z)((0,i.Z)({},{control:u,errors:y,register:$}),{cacheOptions:!0,isClearable:!0,options:I,name:v}),p))})},y);f.propTypes={control:u.object.isRequired,errors:u.object.isRequired,label:u.string.isRequired,filters:u.object,type:(0,u.oneOf)(["assetCategory","expenseCategory","jobTags","costCategory","clientType","tags"])},f.defaultProps={filters:{}}}}]);