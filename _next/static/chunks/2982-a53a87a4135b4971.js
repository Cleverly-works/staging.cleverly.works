"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2982],{45815:function(n,e,t){t.d(e,{z:function(){return o}});var r=t(7297),i=t(75063);function a(){var n=(0,r.Z)(["\n  fragment AccountFields on Account {\n    id\n    type\n    name\n    status\n    vatId\n  }\n"]);return a=function(){return n},n}var o=(0,i.Ps)(a())},78232:function(n,e,t){t.d(e,{F:function(){return j}});var r=t(14924),i=t(26042),a=t(69396),o=t(85893),s=t(45697),u=t.n(s),d=t(10166),l=t(80482),c=t(23776),m=t(98456),p=t(16143),_=t(50135),$=t(99534),g=t(29815),I=t(74061),f=t(6498),y=t(75438),b=t(15861),v=t(61730),h=t(67294),q=(0,h.createContext)({}),x=(0,h.forwardRef)(function(n,e){var t=(0,h.useContext)(q);return(0,o.jsx)("div",(0,i.Z)({ref:e},n,t))}),S=(0,h.forwardRef)(function(n,e){var t=n.children,r=(0,$.Z)(n,["children"]),i=[];t.forEach(function(n){i.push(n),i.push.apply(i,(0,g.Z)(n.children||[]))});var a,s,u=(0,f.u)(),d=(0,v.Z)(u.breakpoints.up("sm"),{noSsr:!0}),l=i.length,c=d?36:48,m=function(n){return n.hasOwnProperty("group")?48:c},p=(s=(0,h.useRef)(null),(0,h.useEffect)(function(){null!=s.current&&s.current.resetAfterIndex(0,!0)},[l]),s);return(0,o.jsx)("div",{ref:e,children:(0,o.jsx)(q.Provider,{value:r,children:(0,o.jsx)(I.S_,{itemData:i,height:(l>8?8*c:i.map(m).reduce(function(n,e){return n+e},0))+16,width:"100%",ref:p,outerElementType:x,innerElementType:"ul",itemSize:function(n){return m(i[n])},overscanCount:5,itemCount:l,children:k})})})});function k(n){var e=n.data,t=n.index,r=n.style,s=e[t],u=(0,a.Z)((0,i.Z)({},r),{top:r.top+8});return s.hasOwnProperty("group")?(0,o.jsx)(y.Z,{component:"div",style:u,children:s.group},s.key):(0,o.jsx)(b.Z,(0,a.Z)((0,i.Z)({component:"li"},s[0]),{noWrap:!0,style:u,children:s[1].label}))}var j=function(n){var e=n.label,t=n.loading,r=n.placeholder,s=n.error,u=n.helperText,d=n.inputProps;return(0,o.jsx)(A,(0,a.Z)((0,i.Z)({},n),{disableListWrap:!0,PopperComponent:Z,ListboxComponent:S,renderInput:function(n){return(0,o.jsx)(_.Z,(0,a.Z)((0,i.Z)({},n,d),{error:s,helperText:u,label:e,placeholder:r,color:"secondary",variant:"standard",InputProps:(0,a.Z)((0,i.Z)({},n.InputProps,(null==d?void 0:d.InputProps)||{}),{endAdornment:(0,o.jsxs)(o.Fragment,{children:[t?(0,o.jsx)(m.Z,{color:"inherit",size:20}):null,n.InputProps.endAdornment]})})}))},renderOption:function(n,e,t){return[n,e,t.index]},renderGroup:function(n){return n}}))};j.defaultProps={value:null,onChange:function(){},label:"",loading:!1,error:!1,onOpen:function(){},options:[],inputProps:{},withoutSelectIcon:!1},j.propTypes={value:u().shape({value:u().any,label:u().string}),onChange:u().func,label:u().string,loading:u().bool,onOpen:u().func,options:u().arrayOf(u().shape({value:u().any,label:u().string})),inputProps:u().object,withoutSelectIcon:u().bool,inputValue:u().string,onInputChange:u().func};var Z=(0,d.Z)(p.Z)((0,r.Z)({zIndex:"12000 !important"},"& .".concat(l.Z.listbox),{boxSizing:"border-box","& ul":{padding:0,margin:0}})),A=(0,d.Z)(c.Z)(function(n){var e=n.withoutSelectIcon;return{"& .MuiAutocomplete-root":{cursor:"pointer"},"& .MuiAutocomplete-popper":{zIndex:"12000 "},"& .MuiAutocomplete-endAdornment":{"& .MuiButtonBase-root.MuiIconButton-root.MuiAutocomplete-popupIndicator":{"& .MuiSvgIcon-root":(0,i.Z)({},e&&{display:"none"})}}}})},63855:function(n,e,t){t.d(e,{h:function(){return w}});var r=t(26042),i=t(69396),a=t(828),o=t(29815),s=t(85893),u=t(67294),d=t(11057),l=t(69368),c=t(50480),m=t(11994),p=t(90629),_=t(51233),$=t(50135),g=t(5616),I=t(61730),f=t(45697),y=t.n(f),b=t(73359),v=t(6388),h=t(59938),q=t(42283),x=t(50459),S=t(92148),k=t(2845),j=t(4972),Z=t(10166),A=t(78232),C=t(33754),T=t(11163),D=t(57179),N=t(48580),w=function(n){var e=n.open,t=n.setOpen,m=n.initialFilters,p=(n.filters,n.setFilters),f=n.filtersVisibilityModel,y=void 0===f?{}:f,Z=(0,k.x)(),C=Z.hasRole,w=Z.user,L=(0,T.useRouter)().query,P=(0,I.Z)("(max-width: 400px)"),z=(0,a.Z)((0,h.X)("form_data_issues_".concat(m.filterType),m),2),U=z[0],R=z[1],H=(0,q.cI)({defaultValues:U}),B=H.control,W=H.handleSubmit,Q=H.register,E=H.reset,G=H.watch,V=H.getValues,Y=G("locationId"),K=(0,u.useState)(""),X=K[0],nn=K[1],ne=(0,a.Z)((0,b.t)(j.yR,{fetchPolicy:"network-only",variables:{accountId:w.accountId}}),2),nt=ne[0],nr=ne[1],ni=nr.loading,na=nr.data,no=(void 0===na?{items:[]}:na).items,ns=(0,a.Z)((0,b.t)(j.SW),2),nu=ns[0],nd=ns[1],nl=nd.loading,nc=nd.data,nm=(void 0===nc?{items:[]}:nc).items,np=(0,a.Z)((0,b.t)(j._d,{variables:{where:{status:{_eq:"active"},Account_Locations:{accountId:{_eq:m.customerId}}}}}),2),n_=np[0],n$=np[1],ng=n$.loading,nI=n$.data,nf=(void 0===nI?{items:[]}:nI).items,ny=(0,a.Z)((0,b.t)(j.zR,{variables:{locationId:null==Y?void 0:Y.value}}),2),nb=ny[0],nv=ny[1],nh=nv.loading,nq=nv.data,nx=(void 0===nq?{items:[]}:nq).items,nS=(0,a.Z)((0,b.t)(j.by,{variables:{where:{type:{_eq:"supplier"}}}}),2),nk=nS[0],nj=nS[1],nZ=nj.loading,nA=nj.data,nC=(void 0===nA?{items:[]}:nA).items,nT=(0,v.aM)(j.K4,{variables:{accountId:w.accountId,limit:50,offset:0,q:""!==X?"%".concat(X,"%"):null}}),nD=nT.data,nN=(void 0===nD?{items:[]}:nD).items,nw=nT.loading,nF=function(n){try{var e,i,a,o,s,u,d,l,c,_={customerId:null===(e=n.customerId)||void 0===e?void 0:e.value,endDate:null==n?void 0:n.endDate,locationId:null===(i=n.locationId)||void 0===i?void 0:i.value,sublocationId:null===(a=n.sublocationId)||void 0===a?void 0:a.value,managerId:n.managerId?w.id:null,tags:null===(o=n.tags)||void 0===o?void 0:o.map(function(n){return n.value}),startDate:null==n?void 0:n.startDate,status:null===(s=n.status)||void 0===s?void 0:s.map(function(n){return n.value}),supplierId:null===(u=n.supplierId)||void 0===u?void 0:u.value,userId:null===(d=n.userId)||void 0===d?void 0:d.value,customerManagerId:null===(l=n.customerManager)||void 0===l?void 0:l.value},$=null==n?void 0:n.q;if($){_.q="%".concat($,"%")||0;var g=/^\d+$/.test($);"id"in m&&(_.id=g?Number($):null),"meta"in m&&(_.meta=g?{invoiceNumbers:[$]}:null),"jobNumber"in m&&(_.jobNumber=g?String($):null,_.invoiceNumber=g?Number($):null)}(null===(c=_.status)||void 0===c?void 0:c.length)&&(_.isChangedStatusSelect=!0),p(function(n){return(0,r.Z)({},n,_)});var I=V();R(function(n){return(0,r.Z)({},n,I)})}finally{t(!1)}},nM=function(){p(m),E(m),sessionStorage.removeItem("form_data_issues_".concat(m.filterType)),t(!1)},nJ=function(n){var e=!0;return n in y&&!y[n]&&(e=!1),e};return(0,s.jsx)(M,{keepMounted:!0,open:e,onClose:function(){return t(!1)},sx:F.modal,children:(0,s.jsx)("form",{onSubmit:W(nF),children:(0,s.jsx)(J,{children:(0,s.jsxs)(_.Z,{direction:"row",flexWrap:"wrap",justifyContent:"center",children:[(0,s.jsx)($.Z,{fullWidth:!0,variant:"standard",color:"secondary",label:"Search...",name:"q",inputRef:Q}),nJ("status")&&(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(q.Qr,{name:"status",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,s.jsx)(A.F,{value:e||[],onChange:function(n,e){return t(e)},multiple:!0,limitTags:1,label:"Select status",options:(0,x.lR)(L.show)})}})}),C(["supplier"].concat((0,o.Z)(S.n)))&&nJ("user")&&(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(q.Qr,{name:"userId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,s.jsx)(A.F,{value:e,onChange:function(n,e){return t(e)},label:"Select user",loading:ni,onOpen:function(){return nt()},options:no})}})}),C("admin")&&nJ("tags")&&(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(D.r,{control:B})}),!m.customerId&&C("admin")&&nJ("customer")&&(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(q.Qr,{name:"customerId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,s.jsx)(A.F,{value:e,onChange:function(n,e){return t(e)},label:"Select customer",loading:nl,onOpen:function(){return nu()},options:nm})}})}),C(["admin","customer"])&&nJ("location")&&(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(q.Qr,{name:"locationId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,s.jsx)(A.F,{value:e,onChange:function(n,e){return t(e)},label:"Select location",loading:ng,onOpen:function(){return n_()},options:nf})}})}),C("admin")&&nJ("supplier")&&(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(q.Qr,{name:"supplierId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,s.jsx)(A.F,{value:e,onChange:function(n,e){return t(e)},label:"Select supplier",loading:nZ,onOpen:function(){return nk()},options:nC})}})}),Y&&C("admin")&&nJ("sublocation")&&(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(q.Qr,{name:"sublocationId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,s.jsx)(A.F,{value:e,onChange:function(n,e){return t(e)},label:"Select sublocation",loading:nh,onOpen:function(){return nb()},options:nx})}})}),(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(q.Qr,{name:"startDate",control:B,render:function(n){return(0,s.jsx)(O,(0,i.Z)((0,r.Z)({},n),{label:"Start date",renderInput:function(n){return(0,s.jsx)($.Z,(0,i.Z)((0,r.Z)({},n),{variant:"standard"}))}}))}})}),(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(q.Qr,{name:"endDate",control:B,render:function(n){return(0,s.jsx)(O,(0,i.Z)((0,r.Z)({},n),{label:"End date",renderInput:function(n){return(0,s.jsx)($.Z,(0,i.Z)((0,r.Z)({},n),{variant:"standard"}))}}))}})}),C((0,o.Z)(S.SA))&&nJ("accountManager")&&(0,s.jsx)(g.Z,{sx:F.inputContainer(P),children:(0,s.jsx)(q.Qr,{name:"customerManager",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,s.jsx)(N.q,{value:e,onChange:function(n,e){return t(e)},loading:nw,options:nN,setSearch:nn,textFieldProps:{color:"secondary",variant:"standard",label:"Select account manager"}})}})}),!m.noAssignToMeFilter&&C((0,o.Z)(S.SA).concat((0,o.Z)(S.n),(0,o.Z)(S.nx)))&&nJ("accountManager")&&(0,s.jsx)(g.Z,{sx:F.singleFilter(P),children:(0,s.jsx)(q.Qr,{name:"managerId",control:B,render:function(n){var e=n.value,t=n.onChange;return(0,s.jsx)(c.Z,{control:(0,s.jsx)(l.Z,{color:"secondary",checked:e,onChange:function(n){return t(n.target.checked)}}),label:"Assigned to me"})}})}),(0,s.jsxs)(_.Z,{width:"100%",direction:"row",justifyContent:"flex-end",spacing:2,sx:F.bottomButtons,children:[(0,s.jsx)(d.Z,{variant:"contained",color:"danger",onClick:function(){return nM()},children:"Cancel"}),(0,s.jsx)(d.Z,{variant:"contained",color:"secondary",type:"submit",children:"Search"})]})]})})})})},F={modal:{width:"40%"},inputContainer:function(n){return(0,r.Z)({width:n?"100%":"50%"},n?{padding:"10px 0px"}:{padding:"10px"})},singleFilter:function(n){return(0,r.Z)({width:"100%"},n?{padding:"10px 0px"}:{padding:"10px"})},checkboxContainer:function(n){return(0,r.Z)({width:"100%"},n?{padding:"10px 0px"}:{padding:"10px"})},bottomButtons:{marginTop:"20px"}};w.defaultProps={open:!1,setOpen:function(){},initialFilters:{},filters:{},setFilters:function(){},filtersVisibilityModel:{}},w.propTypes={open:y().bool,setOpen:y().func,initialFilters:y().object,filters:y().object,setFilters:y().func,filtersVisibilityModel:y().object};var M=(0,Z.Z)(m.Z)(function(){return{display:"flex",justifyContent:"center",alignItems:"center",width:"100%",height:"100%"}}),J=(0,Z.Z)(p.Z)(function(){return{padding:"24px",maxWidth:"700px",maxHeight:"100vh",overflowY:"scroll"}}),O=(0,Z.Z)(C.M)(function(){return{"&.MuiFormControl-root.MuiTextField-root":{width:"100%"}}})},50459:function(n,e,t){t.d(e,{lR:function(){return p},Uu:function(){return m}});var r=t(828);t(52785),t(71431);var i=t(7297),a=t(75063),o=t(85488),s=t(45815),u=t(66312),d=t(75327);function l(){var n=(0,i.Z)(['\n  query GetDashboardList(\n    $accountId: Int\n    $adminId: Int\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n        ]\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ',"\n  ","\n  ","\n  ","\n  ","\n"]);return l=function(){return n},n}(0,a.Ps)(l(),s.z,u.WW,o.aL,o.wd,d.Px);var c=t(22244),m=function(n){var e=["locationId","customerId","assetId"],t="";return n&&n.constructor===Object&&Object.keys(n).length>0&&(t="?",Object.entries(n).map(function(n){var i=(0,r.Z)(n,2),a=i[0],o=i[1];return o&&e.includes(a)&&(t+="".concat([a],"=").concat(o,"&")),0}),t=(t=t.substring(0,t.length-1)).replace("customerId","accountId")),t},p=function(n){var e=["completed","inDispute","disputeResolved","reportSent","invoiceSent","customerPaid","supplierPaid","closed"];switch(n){case"offered":return c.cj.filter(function(n){return"offered"===n.value});case"current":return c.cj.filter(function(n){var e=n.value;return"accepted"===e||"inProgress"===e});case"openJobs":return c.cj.filter(function(n){var e=n.value;return"raised"===e||"pending"===e});case"raised":return c.cj.filter(function(n){return"raised"===n.value});case"pending":return c.cj.filter(function(n){return"pending"===n.value});case"past":return c.cj.filter(function(n){var t=n.value;return e.includes(t)});default:return c.cj}}},52785:function(n,e,t){t.d(e,{ct:function(){return l},lS:function(){return d},p7:function(){return u}});var r=t(7297),i=t(75063);function a(){var n=(0,r.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $type: String\n    $userId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n      }\n      location: Location {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierUser: SupplierUser {\n        id\n        fullName\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _eq: $type }\n        supplierUserId: { _eq: $userId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']);return a=function(){return n},n}function o(){var n=(0,r.Z)(['\n  query GetJobs(\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $offset: Int\n    $q: String\n    $orderBy: Job_order_by!\n    $startDate: timestamptz\n    $status: [String!]\n    $type: [String!]\n    $userId: Int\n    $locationId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n        customerUserId: { _eq: $userId }\n        locationId: { _eq: $locationId }\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        status: { _in: $status }\n        type: { _in: $type }\n        customerUserId: { _eq: $userId }\n        locationId: { _eq: $locationId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n']);return o=function(){return n},n}function s(){var n=(0,r.Z)(["\n  query GetJobs(\n    $assetId: Int\n    $customerId: Int\n    $endDate: timestamptz\n    $number: String\n    $limit: Int\n    $locationId: Int\n    $sublocationId: Int\n    $managerId: Int\n    $customerManagerId: Int\n    $offset: Int\n    $orderBy: Job_order_by!\n    $paid: Boolean\n    $type: [String!]\n    $q: String\n    $startDate: timestamptz\n    $status: [String!]\n    $tags: [Int!]\n    $supplierId: Int\n  ) {\n    jobs: Job(\n      limit: $limit\n      offset: $offset\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ",'\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        sublocationId: { _eq: $sublocationId }\n        managerId: { _eq: $managerId }\n        Customer: { managerId: { _eq: $customerManagerId } }\n        paid: { _eq: $paid }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n      order_by: [$orderBy]\n    ) {\n      id\n      type\n      number\n      status\n      scheduledAt\n      timingStart\n      createdAt\n      tags: Taxonomy(\n        where: {\n          entity: { _eq: "Job" }\n          Taxonomy: {\n            _and: [\n              {status: { _eq: "active" }},\n              {type: { _eq: "tags" }}\n            ]\n\n          }\n        }\n      ) {\n        id\n        tag: Taxonomy {\n          id\n          name\n          meta\n          type\n        }\n      }\n\n      invoices: Invoices(order_by: { createdAt: desc }) {\n        invoiceNumber\n      }\n\n      customer: Customer {\n        id\n        type\n        name\n        status\n        vatId\n\n        manager: Manager {\n          id\n          fullName\n        }\n      }\n      location: Location {\n        id\n        name\n      }\n      sublocation: Sublocation {\n        id\n        name\n      }\n      manager: Manager {\n        id\n        nameFirst\n        nameLast\n      }\n      service: Service {\n        id\n        name\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        taxonomy: Taxonomy {\n          name\n        }\n      }\n      sla: SLA {\n        name\n      }\n      supplier: Supplier {\n        id\n        name\n      }\n      supplierOffers: SupplierOffers {\n        supplier: Supplier {\n          id\n          name\n        }\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        user: User {\n          fullName\n        }\n      }\n    }\n    meta: Job_aggregate(\n      where: {\n        _and: [\n          {\n            _or: [\n              { reference: { _ilike: $q } }\n              { title: { _ilike: $q } }\n              { number: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { Customer: { name: { _ilike: $q } } }\n              { CustomerUser: { email: { _ilike: $q } } }\n              { Supplier: { name: { _ilike: $q } } }\n              { SupplierUser: { email: { _ilike: $q } } }\n              { Location: { name: { _ilike: $q } } }\n              { Taxonomy: { Taxonomy: { name: { _ilike: $q } } } }\n              { number: { _ilike: $q } }\n              { Invoices: { invoiceNumber: { _ilike: $q } } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ',"\n        assetId: { _eq: $assetId }\n        status: { _in: $status }\n        type: { _in: $type }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        sublocationId: { _eq: $sublocationId }\n        managerId: { _eq: $managerId }\n        Customer: { managerId: { _eq: $customerManagerId } }\n        paid: { _eq: $paid }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n    ) {\n      aggregate {\n        totalCount: count\n      }\n    }\n  }\n"]);return s=function(){return n},n}var u=(0,i.Ps)(a()),d=(0,i.Ps)(o()),l=function(n){var e=n.tagsWhere;return(0,i.Ps)(s(),e,e)}},71431:function(n,e,t){var r=t(7297),i=t(75063),a=t(85488),o=t(45815),s=t(66312),u=t(75327);function d(){var n=(0,r.Z)(["\n  query GetDashboardList(\n    $accountId: Int\n    $customerId: Int\n    $supplierId: Int\n    $locationId: Int\n    $managerId: Int\n    $customerManagerId: Int\n    $adminId: Int\n    $startDate: timestamptz\n    $endDate: timestamptz\n    $asAt: timestamptz\n    $jobHoldReasonId: Int\n    $limit: Int\n    $monthStart: timestamptz\n    $offset: Int\n    $orderBy: dashboard_home_details_order_by!\n    $q: String\n    $tileName: String\n    $dayStart: timestamptz\n    $userId: Int\n    $yearStart: timestamptz\n    $number: String\n    $status: [String!]\n  ) {\n    jobs: getDashboard_HomeTile_Details(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n        locationId: $locationId\n        managerId: $managerId\n        customerManagerId: $customerManagerId\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ",'\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        _or: [\n          { supplierId: { _eq: $supplierId } }\n          { SupplierOffers: { Supplier: { id: { _eq: $supplierId } } } }\n        ]\n      }\n      order_by: [$orderBy]\n      limit: $limit\n      offset: $offset\n    ) {\n      Assets(where: { entity: { _eq: "Job" } }) {\n        id\n        assetId\n        __typename\n      }\n      ...JobFields\n      ...JobAdminFields\n      admin: Admin {\n        id\n        name\n        __typename\n      }\n      customer: Customer {\n        ...AccountFields\n        manager: Manager {\n          id\n          fullName\n        }\n        __typename\n      }\n      location: Location {\n        id\n        name\n        __typename\n      }\n      job: Job {\n        status\n      }\n      manager: Manager {\n        ...UserFields\n        __typename\n      }\n      service: Service {\n        id\n        name\n        __typename\n      }\n      shortJobDesc: Taxonomy(where: { Taxonomy: { type: { _eq: "jobTags" } } }) {\n        id\n        taxonomyId\n        comments\n        taxonomy: Taxonomy {\n          name\n          __typename\n        }\n        __typename\n      }\n      tags: Taxonomy(\n        where: {\n          entity: { _eq: "Job" }\n          Taxonomy: {\n            status: { _eq: "active" }\n            type: { _eq: "tags" }\n          }\n        }\n      ) {\n        id\n        tag: Taxonomy {\n          id\n          name\n          meta\n          type\n        }\n      }\n      sla: SLA {\n        id\n        name\n        __typename\n      }\n      supplier: Supplier {\n        ...AccountFields\n        __typename\n      }\n      supplierOffers: SupplierOffers {\n        status\n        rate\n        supplier: Supplier {\n          ...AccountFields\n          __typename\n        }\n        __typename\n      }\n      timings: JobTimings(order_by: { createdAt: asc }) {\n        id\n        status\n        createdAt\n        user: User {\n          ...UserFields\n          __typename\n        }\n        __typename\n      }\n      id: jobId\n      number\n      # location\n      priority\n      scheduledAt\n      assignedTo\n      jobHoldReason\n      locationId\n      meta\n      managerId\n      description\n      customerName\n      customerId\n      reference\n      serviceName\n      status\n      supplierId\n      supplierName\n      timingStart\n      type\n      quoteNumber\n      quoteDue\n      createdAt\n    }\n    meta: getDashboard_HomeTile_Details_aggregate(\n      args: {\n        accountId: $accountId\n        adminId: $adminId\n        asAt: $asAt\n        jobHoldReasonId: $jobHoldReasonId\n        monthStart: $monthStart\n        tileName: $tileName\n        dayStart: $dayStart\n        userId: $userId\n        yearStart: $yearStart\n        locationId: $locationId\n        managerId: $managerId\n        customerManagerId: $customerManagerId\n      }\n      where: {\n        _and: [\n          {\n            _or: [\n              { number: { _eq: $number } }\n              { reference: { _ilike: $q } }\n              { description: { _ilike: $q } }\n              { customerName: { _ilike: $q } }\n              { serviceName: { _ilike: $q } }\n              { assignedTo: { _ilike: $q } }\n              { supplierName: { _ilike: $q } }\n              { location: { _ilike: $q } }\n              { number: { _ilike: $q } }\n            ]\n          }\n          {\n            _or: [\n              { _and: [{ timingStart: { _gte: $startDate } }, { timingStart: { _lte: $endDate } }] }\n              { _and: [{ scheduledAt: { _gte: $startDate } }, { scheduledAt: { _lte: $endDate } }] }\n            ]\n          }\n        ]\n        ',"\n        status: { _in: $status }\n        customerId: { _eq: $customerId }\n        locationId: { _eq: $locationId }\n        managerId: { _eq: $managerId }\n        supplierId: { _eq: $supplierId }\n      }\n    ) {\n      aggregate {\n        totalCount: count\n        __typename\n      }\n      __typename\n    }\n  }\n  ","\n  ","\n  ","\n  ","\n  ","\n"]);return d=function(){return n},n}var l=function(n){var e=n.tagsWhere;return(0,i.Ps)(d(),e,e,o.z,s.WW,a.aL,a.wd,u.Px)};e.Z=l},66137:function(n,e,t){t.d(e,{Y:function(){return r}});var r=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Job",t="";return(null==n?void 0:n.length)&&(t="\n      Taxonomy: {\n      _and: [\n        { entity: { _eq: ".concat(e,' } }\n        {\n          Taxonomy: {\n            status: { _eq: "active" }\n            _and: [{ id: { _in: [').concat(n,'] } }, { type: { _eq: "tags" } }]\n          }\n        }\n      ]\n    }\n  ')),t}},9492:function(n,e,t){t.d(e,{S:function(){return r}});var r=function(n,e){var t=document.createElement("a");"string"==typeof t.download?(document.body.appendChild(t),t.download=e,t.href=n,t.click(),document.body.removeChild(t)):location.replace(n)}}}]);